@model  IEnumerable <EzBusiness_ViewModels.Models.Humanresourcepayroll.BranchVM>

@{
    ViewBag.Title = "BranchMaster";
    var counter = 0;
}
<script src="~/Scripts/EzComNDW.js"></script>
<script>
    EzAuthentication("/Branch");
    var n = EzAuthenticationBtn("/Branch", "ViewIt");
    if (n == 1) {
        $(document).ready(function () {
            Ezsidetbl1("#tblUnits", "#tblUnits tfoot td", false, "#tblUnits thead");
        });
        $('#tblUnits').show();

    } else {
        $('#tblUnits').hide();
    }
</script>
<script>
    var Deps = [];
    var paydeductons = [];
    var paydeductons1 = [];
       $(function () {
        $("#tblUnits1").hide();     
        $("#tbldiv").show();
        GetDivisionList();
            $("#btnAdd").click(function () {
                var n = EzAuthenticationBtn("/Branch", "NewIt");
                if (n == 1) {
                    var counter = $("#Counter").val();
                    var newRow1;
                    newRow1 += GetPayDeductOnDDL(counter);
                    $("#tbldiv").hide();
                    var abk = [];
                    abk.push('#btnAdd', "[name*='Edit']", "[name *= 'Delete']");
                    Ezprop(abk, "disabled", true);
                    abk = [];
                    abk.push('#btnCancel', '#btnSave');
                    Ezprop(abk, "disabled", false);                   
                    $("#tblUnits1 tbody tr").css("background", "");
                    $("#tblUnits1").show();
                }
           //$("#ddlPayDeductOn3").hide();
        });
        var counter = $("#Counter").val();
        /*Add Table Change Event*/
        $("#tblUnits1").on("change", "[name*='txtCode']", function () {
            var tr = $(this).closest('tr');
           
            drec = [];
            $('#tblUnits1 tbody tr td:nth-child(1)').each(function () {
                //add item to array
                var ab = $(this).find("[name *= 'txtCode']").val();
                drec.push(ab);
            });

            drec.splice($.inArray(tr.find("[name *= 'txtCode']").val(), drec), 1);

            if ($.inArray(tr.find("[name *= 'txtCode']").val(), drec) >= 0) {
                var dr = tr.find("[name *= 'txtCode']").val();
                tr.css("background", "red");
                tr.find("[name *= 'txtCode']").focus();
                EzAlerterrtxt("Already Exist Code '" + dr + "'");
                tr.find("[name *= 'txtCode']").val('');
            }
            else {
                tr.css("background", "");
                if (tr.is(":last-child")) {
                    tr.clone(true, true).insertAfter(tr);
                    var trLast = $("#tableMetaSettings tr:last");
                    $("<td><button type='button' class='btn btn-danger' name='btnDelete" + counter + "')'><span class='glyphicon glyphicon-remove'></span></button></td>")
                               .appendTo("#tblUnits1 tbody tr:nth-last-child(2)");
                    $(this).closest('tr').next('tr').find("[name*='txtCode']").val('');
                    trLast.find("[name *= 'txtCode']").attr({
                        "name": ("txtCode" + counter)
                    });
                    trLast.find("[name *= 'txtName']").attr({
                        "name": ("Name" + counter)
                    });
                    trLast.find("[name *= 'ddlPayDeductOn1']").attr({
                        "name": ("ddlPayDeductOn1" + counter)
                    });                   
                    trLast.find(":first").text(counter);
                  }
            }
            counter++;
        });

        /*Name Tab Event*/
        EztableTabEve("#tblUnits1", "[name*='txtCode']", "[name *= 'txtName']", "Please Enter Code", "T", "");

           /*DivisionCode Tab Event*/
        
        EztableLstEnt("#tblUnits1", "[name*='ddlPayDeductOn']", "[name*='txtCode']", "Please Enter DivisionCode", "T", "0")
        EztableLstTab("#tblUnits1", "[name*='ddlPayDeductOn']", "[name*='txtCode']", "Please Enter DivisionCode", "T", "0")
                    
        /*Refresh */
        $("#btnCancel").click(function () {
            $("#tbldiv").show();
            if ($("#tblUnits1 > tbody > tr").length > 1) {
                $("#tblUnits1 tbody tr td:last-child").remove();
            }
            $("#tblUnits1 tbody").find("tr:gt(0)").remove();         
            $("#tblUnits1").hide();
            var abk1 = [];
            abk1.push("[name*='txtCode']", "[name*='txtName']", "[name*='ddlPayDeductOn1']");
            Ezsettxtclr(abk1);
            abk1 = [];
            abk1.push("#btnCancel", "#btnSave");
            Ezprop(abk1, "disabled", true);
            abk1 = [];
            abk1.push('#btnAdd', "[name*='Edit']", "[name*='Delete']");
            Ezprop(abk1, "disabled", false);
            //Ezerrormsg("#ErrorMessage", "");
        });
        /*Save Unit Table */
        $("#btnSave").click(function () {
            //$("#ddlPayDeductOn3").hide()
            var Brc = {
                BranchDdetailnew: []
            };
            //Ezerrormsg("#ErrorMessage", "");
            $("#tblUnits1 tbody tr").each(function (index, item) {               
                var StsCode = $(this).find("[name*='txtCode']").val().trim();
                var StsName = $(this).find("[name*='txtName']").val().trim();
                var StsDivisionCode = $(this).find("[name*='ddlPayDeductOn1']").val().trim();               
                if ((StsCode != "") && (StsName != "")) {
                    var BranchDetail = {
                        Code: StsCode,
                        Name: StsName,
                        DivCode:StsDivisionCode,                       
                    };
                  Brc.BranchDdetailnew.push(BranchDetail);
                }
            });
            var validationResult = ValidateForm(Brc);
            if (validationResult.formValid) {
                $.post("/Branch/SaveBrnc", Brc).done(function (response) {
                    if (response.Drecord == null) {
                        response.Drecord = 0;
                        $("#tbldiv").show();
                    }
                    $("#tblUnits1 tbody tr").each(function (index, item) {
                        var tr = $(this).closest("tr");
                        var codeAdd = $(tr).find("[name*='txtCode']").val().trim();
                        var nameAdd = $(tr).find("[name*='txtName']").val().trim();
                        var DivCodeAdd = $(tr).find("[name*='ddlPayDeductOn1']").val().trim();                       
                        if (response.Drecord.length > 0) {
                            var ary1 = [];
                            ary1 = response.Drecord;
                            if ($.inArray(codeAdd, ary1) < 0 && codeAdd != '' && nameAdd != '') {
                                $(this).closest('tr').remove();
                                var counter = $("#Counter").val();
                                var firstRow = $('#tblUnits tbody tr:first');

                                var newRow = "<tr><td>" + codeAdd + "</td><td>" + nameAdd +
                                    "</td><td>" + DivCodeAdd + "</td>";
                                newRow += "</td><td><button class='btn btn-primary' name='Edit" + counter + "' disabled>Edit</button>&nbsp;<button class='btn btn-danger' name='DeleteNew" + counter +
                                    "' disabled>Delete</button><input type='hidden' name='EditMode" + counter + "' value='true'><input name='item.CmpyCode' type='hidden' value='" + response.CmpyCode +
                                    "'></td></tr>";
                                $(firstRow).after(newRow);
                            }
                            else if (codeAdd != '') {
                                $(this).closest('tr').css("background", "red");
                            }
                            else {
                                $(this).closest('tr').css("background", "");
                            }
                        }
                        else {
                            $("#tblUnits1 tbody").find("tr:not(:last)").remove();
                            var abk1 = [];
                            abk1.push("[name*='txtCode']", "[name*='txtName']", "[name*='ddlPayDeductOn1']");
                            Ezsettxtclr(abk1);                                                   
                            $("#tblUnits1").hide();                            
                            if (codeAdd != '' && nameAdd != '') {
                                var counter = $("#Counter").val();
                                var firstRow = $('#tblUnits tbody tr:first');
                                var newRow = "<tr><td>" + codeAdd + "</td><td>" + nameAdd +
                                    "</td><td>" + DivCodeAdd + "</td>";
                                newRow += "</td><td><button class='btn btn-primary' name='Edit" + counter + "' disabled><span class='glyphicon glyphicon-pencil'></span></button>&nbsp;<button class='btn btn-danger' name='DeleteNew" + counter +
                                    "' disabled><span class='glyphicon glyphicon-trash'></span></button><input type='hidden' name='EditMode" + counter + "' value='false'><input name='item.CmpyCode' type='hidden' value='" + response.CmpyCode +
                                    "'></td></tr>";
                                //newRow += "</tr>";
                                $(firstRow).after(newRow);
                            }
                            abk1 = [];
                            abk1.push("#btnCancel", "#btnSave");
                            Ezprop(abk1, "disabled", true);
                            abk1 = [];
                            abk1.push('#btnAdd', "[name*='Edit']", "[name*='Delete']");
                            Ezprop(abk1, "disabled", false);
                            EzAlertSave();
                            $(".dataTables_empty").replaceWith("");
                        }
                    });

                    $("#tbldiv").show();
                });
            }
            else {
                EzAlerterr();
            }
        });

        function ValidateForm(Brc) {
           
            var response = {
                ErrorMessage: "",
                formValid: false
            };
            if (Brc.BranchDdetailnew.length == 0) {
                response.ErrorMessage += "Please Enter atleast One Branch code Details";
            }
            if (response.ErrorMessage.length == 0) {
                response.formValid = true;
            }

            return response;
        }

        $("#tblUnits1").on("click", "[name*='btnDelete']", function () {
            $(this).closest("tr").remove();
        });
       
        $(document).ajaxError(function (event, jqxhr, settings, thrownError) {
            console.log(thrownError);
        });
       
        $("#tblUnits").on("click", "[name^='Edit']", function () {            
            var n = EzAuthenticationBtn("/Branch", "EditIt");
            if (n == 1) {
                var counter = $("#Counter").val();
                var hdnEditMode = $(this).parent().find('input:hidden:first');
                var hdnCmpyCode = $(this).parent().find("[name='item.CmpyCode']").val();
                var tr = $(this).closest("tr");
                var hdnCode = $(tr).find("td:eq(0)").text().trim();
                var index = $(this).attr("name").substring(5);
                var NameTd = $(tr).find("td:eq(1)");
                var paydeductonTd = $(tr).find("td:eq(2)");
                var editButton = $(this);
                if (hdnEditMode.val() == "true") {
                    var NameEdit = $(tr).find("[name*='txtName']").val();
                    var DivCodeEdit = $(tr).find("[name*='ddlPayDeductOn1']").val();
                    var Branch = {
                        CmpyCode: hdnCmpyCode,
                        Code: hdnCode,
                        Name: NameEdit,
                        DivCode: DivCodeEdit,
                        EditFlag: true
                    };
                   
                    $.post("/Branch/SaveBrnc", Branch).done(function (response) {
                        NameTd.text(response.Name);
                        paydeductonTd.text(response.DivCode);
                        hdnEditMode.val("false");
                        editButton.html('<span class="glyphicon glyphicon-pencil"></span>');
                        editButton.attr('title', 'Edit');
                        tr.find("[name^='Delete']").html('<span class="glyphicon glyphicon-trash"></span>');
                        tr.find("[name^='Delete']").attr('title', 'Delete');
                        tableDis("F");
                        EzAlertUpd(hdnCode);
                    });
                    $(document).ajaxError(function (event, jqxhr, settings, thrownError) {
                        console.log(thrownError);
                    });
                } else {
                    var Name = $(tr).find("td:eq(1)").text().trim();
                    $('#Brname').val(Name);
                    NameTd.html("<input type='text' class='grid-control' name='txtName" + index + "' value='" + Name.trim() + "' />");
                    var paydeducton = $(tr).find("td:eq(2)").text().trim();
                    $('#divname').val(paydeducton);
                    paydeductonTd.html(GetPayDeductOnDDL(index));
                    paydeductonTd.find("select").val(paydeducton);
                    $(this).html('<span class="glyphicon glyphicon-upload" ></span>');
                    $(this).attr('title', 'Update');
                    hdnEditMode.val("true");
                    tableDis("T");
                    $(this).attr("disabled", false);
                    tr.find("[name^='Delete']").prop("disabled", false);
                    tr.find("[name^='Delete']").html('<span class="glyphicon glyphicon-remove"></span>');
                    tr.find("[name^='Delete']").attr('title', 'Cancel');
                }
            }
        });

        $("#tblUnits").on("click", "[name^='Delete']", function () {
           
            var n = EzAuthenticationBtn("/Branch", "DeleteIt");
            if (n == 1) {
                var tr = $(this).closest("tr");
                var hdnCmpyCode = $(this).parent().find("[name='item.CmpyCode']").val();
                var codeTd = $(tr).find("td:eq(0)");
                var hdnMode = $(this).parent().find('input:hidden:first');
                var code = "";
                if (hdnMode.val() == "false") {
                    code = $(tr).find("td:eq(0)").text().trim();
                    const swalWithBootstrapButtons = Swal.mixin({
                        confirmButtonClass: 'btn btn-success',
                        cancelButtonClass: 'btn btn-danger',
                        buttonsStyling: false,
                    })
                    swalWithBootstrapButtons.fire({
                        title: 'Are you sure?',
                        text: "You won't be able to revert this!",
                        type: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'No, cancel!',
                        reverseButtons: true
                    }).then((result) => {
                        if (result.value) {
                            code = $(tr).find("td:eq(0)").text().trim();
                            $.getJSON("/DeleteBrs", { Code: code, CmpyCode: hdnCmpyCode }).done(function (data) {
                                if (data.DeleteFlag) {                                   
                                    tr.remove();
                                    if ($('#tblUnits tbody tr').length == 1 || $('#tblUnits tbody tr').length == 0) {
                                       //$(".dataTables_empty").replaceWith("No data available in table");
                                       var firstRow = $('#tblUnits tbody');
                                       var newRow = "<tr><td valign='top' colspan='4' class='dataTables_empty'>No data available in table</td></tr>";
                                       $(firstRow).append(newRow);
                                       $('.dataTables_info').replaceWith('Showing 0 to 0 of 0 entries');
                                    }
                                } else {
                                   EzAlertdele(code);
                                }
                            });
                            swalWithBootstrapButtons.fire(
                              'Deleted!',
                              'Your Code has been deleted.',
                              'success'
                            )

                        } else if (
                            // Read more about handling dismissals
                          result.dismiss === Swal.DismissReason.cancel
                        ) {
                            swalWithBootstrapButtons.fire(
                              'Cancelled',
                              'Your Code is safe :)',
                              'error'
                            )
                        }
                    })
                    
                }
                else {
                    var NameTd = $(this).closest("tr").find("td:eq(1)");
                    var paydeductonTd = $(this).closest("tr").find("td:eq(2)");
                    var NameEdit = $('#Brname').val();
                    var paydeductonEdit = $('#divname').val();
                    var hdnEditMode = $(this).parent().find('input:hidden:first');
                    NameTd.html(NameEdit);
                    paydeductonTd.html(paydeductonEdit);
                    tr.find("[name^='Edit']").html('<span class="glyphicon glyphicon-pencil" ></span>')
                    $(this).html('<span class="glyphicon glyphicon-trash" ></span>')
                    hdnEditMode.val("false");
                    tableDis("F");
                }
            }
        });
    });
    var k = 0;

    function tableDis(k) {
        if (k == "T") {
            $("#tblUnits tbody tr").find("[name^='Edit']").prop("disabled", true);
            $("#tblUnits tbody tr").find("[name^='Delete']").prop("disabled", true);
            $("#btnAdd").prop('disabled', true);
        }
        else {
            $("#tblUnits tbody tr").find("[name^='Edit']").prop("disabled", false);
            $("#tblUnits tbody tr").find("[name^='Delete']").prop("disabled", false);
            $("#btnAdd").prop('disabled', false);

        }
    }
    /*Start Code For Bind Dropdown*/
    function GetPayDeductOnDDL(index) {
       
        if (paydeductons.length > 0) {
            var ddlPayDeductOn = "<select class='target grid-control' name='ddlPayDeductOn1" + index + "'>";
            for (var i in paydeductons) {
                ddlPayDeductOn += "<option value='" + paydeductons[i].DivisionCode + "'>" + paydeductons[i].DivisionName + "</option>";
            }
            ddlPayDeductOn += "</select>";
        }
        return ddlPayDeductOn;
    }
   
    /*Code For Bind Branch Code*/
    function GetDivisionList() {
       
        var index = 1;
        $.ajax({
            url: "/DivCommontable2",
            dataType: "json",
            success: function (data) {
                paydeductons = data;

                if (paydeductons.length > 0) {

                    var mySelect = $('#ddlPayDeductOn1');

                    for (var i in paydeductons) {
                        mySelect.append(
                            $('<option></option>').val(paydeductons[i].DivisionCode).html(paydeductons[i].DivisionName)
                        );
                    }
                }
            },
            error: function () {
                EzAlerterrtxt('error occurred');
            }
        });
    }
    /*End Code For Bind Dropdown*/
</script>
<script>
$(document).ready(function(){
    //$('[data-toggle="tooltip"]').tooltip();
    $(".edit").attr('title', 'Edit');
    $(".delete").attr('title', 'Delete');
});
</script>
<br />

<div class="title-action">
    <button class="btn btn-primary btn1" id="btnAdd"><span class="glyphicon glyphicon-plus-sign"></span>&nbsp;Add</button>
    <button type="submit" class="btn btn-primary btn1" id="btnSave" disabled><span class="glyphicon glyphicon-floppy-disk"></span>&nbsp; Save</button>
    <button class="btn btn-warning btn1" id="btnCancel"><span class="glyphicon glyphicon-off"></span>&nbsp; Cancel</button>
    <input type="hidden" id="hdnOperationMode" value="" />
</div>
<label class="row" id="ErrorMessage" style="color:red;">
    <strong></strong>
</label>
<div class="panel panel-default panl">
    <div class="panel-body">
        <input id="Brname" type="hidden" />
        <input id="divname" type="hidden" />
        <div class="table-responsive">
        <table class="table table-bordered table-sm" id="tblUnits1">
            <thead>
                <tr class="tr">
                    <th>
                        @Html.DisplayNameFor(model => model.Code)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DivCode)
                    </th>                    
                </tr>
            </thead>
            
            <tbody>
                <tr>
                    <td>
                        <div class="grid-group" style="margin-bottom:10px;">
                            @Html.TextBox(string.Concat("txtCode", counter), null, new { @class = "grid-control" })
                        </div>
                    </td>
                    <td>
                        <div class="grid-group">
                            @Html.TextBox(string.Concat("txtName", counter), null, new { @class = "grid-control" })
                        </div>
                    </td>
                    <td>
                        <div class="grid-group">
                            <div class="col-md-9 input-field">
                                <select class="grid-control" name="ddlPayDeductOn1" id="ddlPayDeductOn1"></select>
                            </div>
                        </div>
                    </td>
                    
                </tr>
            </tbody>
        </table>
        </div>
        <div class="col-md-12 table-responsive">
        <div id="tbldiv">
            <table class="table table-bordered stripe display hover" id="tblUnits" >
                <thead>
                    <tr class="tr">
                        <th>
                            @Html.DisplayNameFor(model => model.Code)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DivCode)
                        </th>                        
                        <th>Action</th>

                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.Code)
                        </td>
                        <td>
                            @Html.DisplayNameFor(model => model.Name)
                        </td>
                        <td>
                            @Html.DisplayNameFor(model => model.DivCode)
                        </td>
                        <td></td>
                    </tr>
                </tfoot>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Code)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DivCode)
                            </td>
                            <td>
                                <button class="btn btn-primary" data-toggle="tooltip" title="Edit" name="@string.Concat("Edit",counter)"><span class="glyphicon glyphicon-pencil"></span></button>
                                <button class="btn btn-danger" data-toggle="tooltip" title="Delete" name="@string.Concat("Delete",counter)"><span class="glyphicon glyphicon-trash"></span></button>
                                <input type="hidden" name="@string.Concat("EditMode",counter)" value="false" />
                                @Html.HiddenFor(m => item.CmpyCode)
                            </td>
                        </tr>
                        counter++;
                    }
                </tbody>

            </table>
        </div>
        </div>
        @Html.Hidden("Counter", counter)
    </div>
</div>






