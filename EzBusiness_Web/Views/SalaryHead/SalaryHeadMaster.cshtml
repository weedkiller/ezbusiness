@model IEnumerable<EzBusiness_ViewModels.Models.Humanresourcepayroll.SalaryHeadVM>
@{
    ViewBag.Title = "SalaryHeadMaster";
    var counter = 1;
}
<script src="~/Scripts/EzComNDW.js"></script>
<script>
    $(function () {       
        EzAuthentication("/SalaryHead");
        var n = EzAuthenticationBtn("/SalaryHead", "ViewIt");
        if (n == 1) {
            Ezsidetbl('#tblUnits', '#tblUnits tfoot td', true, "#tblUnits thead");
            $('#tblUnits').show();

        } else {
            $('#tblUnits').hide();
        }
    });
</script>


<script>
    var Sals = [];
    var paydeductons = [];
    $(function () {
        GetPayDeductOns();
        $("#btnAdd").click(function () {
            var n = EzAuthenticationBtn("/SalaryHead", "NewIt");
            if (n == 1) {
                var counter = $("#Counter").val();
                var firstRow = $('#tblUnits tr:first');
                var cmpyCode = $('#tblUnits tr:last').find("[name='item.CmpyCode']").val();

                tableDis("T");

                var newRow = "<tr><td><input type='text' name='txtCode" + counter + "'></td><td><input type='text' name='txtName" + counter + "'></td>";


                newRow += "<td><button class='btn btn-primary' title='Add' name='Add" + counter + "'><span class='glyphicon glyphicon-saved'></span></button>&nbsp;<button title='Cancel' class='btn btn-danger' name='NewDelete" + counter +
                    "'><span class='glyphicon glyphicon-trash'></span></button><input type='hidden' name='AddMode" + counter + "' value='true'><input name='item.CmpyCode' type='hidden' value='" + cmpyCode +
                    "'></td></tr>";


                $(firstRow).after(newRow);
            }
        });

        $("#tblUnits").on("click", "[name^='Add']", function () {
           
            var counter = $("#Counter").val();
            var hdnAddMode = $(this).parent().find('input:hidden:first');
            var hdnCmpyCode = $(this).parent().find("[name='item.CmpyCode']").val();
            var editButton = $(this).parent().find("[name='Add" + counter + "']");
            var tr = $(this).closest("tr");
            var index = $(this).attr("name").substring(4);
            var codeTd = $(tr).find("td:eq(0)");
            var nameTd = $(tr).find("td:eq(1)");
          

            if (hdnAddMode.val() == "true") {
                var hdnCode = $(tr).find("td:eq(0)").text().trim();
                var tf = true;
                if (hdnCode == "") {
                    var hdnCode = $(tr).find("[name*='txtCode']").val().trim();
                    tf = false;                    
                }
                var nameAdd = $(tr).find("[name*='txtName']").val().trim();

                var Sals = {
                    CmpyCode: hdnCmpyCode,
                    Code: hdnCode,
                    Name: nameAdd,
                    EditFlag: tf
                };
               
                if (hdnCode && hdnCmpyCode && nameAdd) {
                    $.post("/SalaryHead/SaveSals", Sals).done(function (response) {
                        console.log(response);
                        codeTd.text(response.Code);
                        nameTd.text(response.Name);
                        hdnAddMode.val("false");
                        // editButton.attr("name", ("Edit" + counter)).text("Edit");
                        tableDis("F");
                        editButton.html('<span class="glyphicon glyphicon-pencil"></span>');
                        editButton.attr('title', 'Edit');
                        hdnAddMode.attr("name", ("AddMode" + counter)).val("false");
                        tr.find("[name^='NewDelete']").html('<span class="glyphicon glyphicon-trash"></span>');
                        tr.find("[name^='NewDelete']").attr('title', 'Delete');

                        EzAlertSave();
                    });
                }
                else { EzAlerterr(); }
            }
            else {

                var name = $(tr).find("td:eq(1)").text();
                nameTd.html("<input type='text' name='txtName" + index + "' value='" + name.trim() + "' />");


                $(this).html('<span class="glyphicon glyphicon-upload"></span>');
                hdnAddMode.val("true");
                tableDis("T");
                $(this).attr("disabled", false);
                tr.find("[name^='NewDelete']").prop("disabled", false);
                //tr.find("[name^='Delete']").text("Cancel");
                tr.find("[name^='NewDelete']").html('<span class="glyphicon glyphicon-remove"></span>');
                tr.find("[name^='NewDelete']").attr('title', 'Cancel');
            }
        });

        $("#tblUnits").on("click", "[name*='NewDelete']", function () {
            tableDis("F");
            var tr = $(this).closest("tr");
            var hdnAddMode = $(this).parent().find('input:hidden:first');
            if (hdnAddMode.val() == "false" ) {
                //$(this).closest("tr").remove();
                const swalWithBootstrapButtons = Swal.mixin({
                    confirmButtonClass: 'btn btn-success',
                    cancelButtonClass: 'btn btn-danger',
                    buttonsStyling: false,
                })

                swalWithBootstrapButtons.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'No, cancel!',
                    reverseButtons: true
                    
                }).then((result) => {
                    if (result.value) {
                        code = $(tr).find("td:eq(0)").text().trim();
                        $.getJSON("/DeleteSals", { Code: code }).done(function (data) {
                            if (data.DeleteFlag) {
                               
                                tr.remove();
                                if ($('#tblUnits tbody tr').length == 1 || $('#tblUnits tbody tr').length == 0) {
                                    //$(".dataTables_empty").replaceWith("No data available in table");
                                    var firstRow = $('#tblUnits tbody');
                                    var newRow = "<tr><td valign='top' colspan='4' class='dataTables_empty'>No data available in table</td></tr>";
                                    $(firstRow).append(newRow);
                                    $('.dataTables_info').replaceWith('Showing 0 to 0 of 0 entries');
                                }

                            } else {
                                EzAlertdele(code);
                            }
                        });
                        swalWithBootstrapButtons.fire(
                          'Deleted!',
                          'Your Code has been deleted.',
                          'success'
                        )

                    } else if (
                        // Read more about handling dismissals
                      result.dismiss === Swal.DismissReason.cancel
                    ) {
                        swalWithBootstrapButtons.fire(
                          'Cancelled',
                          'Your Code is safe :)',
                          'error'
                        )
                    }
                })
            }
            else if (hdnAddMode.val() == "true") {
               
                var nameTd = $(tr).find("td:eq(1)");

                var nameEdit = $(tr).find("[name*='txtName']").val().trim();
                var hdnEditMode = $(this).parent().find('input:hidden:first');
                nameTd.html(nameEdit);
                tr.find("[name^='Edit']").html('<span class="glyphicon glyphicon-pencil"></span>');

                tr.find("[name^='Edit']").attr('title', 'Edit');
                $(this).html('<span class="glyphicon glyphicon-trash"></span>');
                //$(this).text("Delete");
                $(this).attr('title', 'Delete');
                hdnEditMode.val("false");
               
                tableDis("F");
                tr.find("[name^='Add']").html('<span class="glyphicon glyphicon-pencil"></span>');
            }
            //else ($(tr).find("[name*='txtCode']").val().trim() == "")
            //{
            //    $(this).closest("tr").remove();
            //}
            

        });

        $(document).ajaxError(function (event, jqxhr, settings, thrownError) {
            console.log(thrownError);
        });

      

        $("#tblUnits").on("click", "[name^='Edit']", function () {
            var n = EzAuthenticationBtn("/SalaryHead", "EditIt");
            if (n == 1) {
                var counter = $("#Counter").val();
                var hdnEditMode = $(this).parent().find('input:hidden:first');
                var hdnCmpyCode = $(this).parent().find("[name='item.CmpyCode']").val();
                var tr = $(this).closest("tr");
                var hdnCode = $(tr).find("td:eq(0)").text().trim();
                var index = $(this).attr("name").substring(4);
                var nameTd = $(tr).find("td:eq(1)");              
                var editButton = $(this);
                if (hdnEditMode.val() == "true") {
                    var nameEdit = $(tr).find("[name*='txtName']").val().trim();                   
                    var Sals = {
                        CmpyCode: hdnCmpyCode,
                        Code: hdnCode,
                        Name: nameEdit,                        
                        EditFlag: true
                    };
                    if (nameEdit) {
                        $.post("/SalaryHead/SaveSals", Sals).done(function (response) {
                            nameTd.text(response.Name);                           
                            editButton.html('<span class="glyphicon glyphicon-pencil"></span>');
                            editButton.attr('title', 'Edit');
                            tr.find("[name^='Delete']").html('<span class="glyphicon glyphicon-trash"></span>');
                            tr.find("[name^='Delete']").attr('title', 'Delete');
                            tableDis("F");
                            hdnEditMode.val("false");

                            tableDis("F");
                            EzAlertUpd(hdnCode);
                        });
                    }
                    else {
                        EzAlerterr();
                    }
                    $(document).ajaxError(function (event, jqxhr, settings, thrownError) {
                        console.log(thrownError);
                    });
                } else {
                   
                    var name1 = $(tr).find("td:eq(1)").text();
                    $('#hdname').val(name1.trim());
                    nameTd.html("<input type='text' name='txtName" + index + "' value='" + name1.trim() + "' />");                    
                    $(this).html('<span class="glyphicon glyphicon-upload"></span>');
                    hdnEditMode.val("true");
                    tableDis("T");
                    $(this).attr("disabled", false);
                    tr.find("[name^='Delete']").prop("disabled", false);
                    //tr.find("[name^='Delete']").text("Cancel");
                    tr.find("[name^='Delete']").html('<span class="glyphicon glyphicon-remove"></span>');
                    tr.find("[name^='Delete']").attr('title', 'Cancel');

                    //var sno = $(tr).find("td:eq(5)").text();
                    //snoTd.html("<input type='text' name='txtSNo" + index + "' value='" + sno.trim() + "' />");



                }
            }
        });


        $("#tblUnits").on("click", "[name^='Delete']", function () {
           
            var n = EzAuthenticationBtn("/SalaryHead", "DeleteIt");
            if(n==1){
            var tr = $(this).closest("tr");
            var hdnCmpyCode = $(this).parent().find("[name='item.CmpyCode']").val();
            var code = $(tr).find("td:eq(0)");
            var hdnMode = $(this).parent().find('input:hidden:first');
            var code = "";


            if (hdnMode.val() == "false") {

                const swalWithBootstrapButtons = Swal.mixin({
                    confirmButtonClass: 'btn btn-success',
                    cancelButtonClass: 'btn btn-danger',
                    buttonsStyling: false,
                })

                swalWithBootstrapButtons.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'No, cancel!',
                    reverseButtons: true
                }).then((result) => {
                    if (result.value) {
                        code = $(tr).find("td:eq(0)").text().trim();
                        $.getJSON("/DeleteSals", { Code: code }).done(function (data) {
                            if (data.DeleteFlag) {
                               
                                tr.remove();
                                if ($('#tblUnits tbody tr').length == 1 || $('#tblUnits tbody tr').length == 0) {
                                    //$(".dataTables_empty").replaceWith("No data available in table");
                                    var firstRow = $('#tblUnits tbody');
                                    var newRow = "<tr><td valign='top' colspan='4' class='dataTables_empty'>No data available in table</td></tr>";
                                    $(firstRow).append(newRow);
                                    $('.dataTables_info').replaceWith('Showing 0 to 0 of 0 entries');
                                }

                            } else {
                                EzAlertdele(code);
                            }
                        });
                        swalWithBootstrapButtons.fire(
                          'Deleted!',
                          'Your Code has been deleted.',
                          'success'
                        )

                    } else if (
                        // Read more about handling dismissals
                      result.dismiss === Swal.DismissReason.cancel
                    ) {
                        swalWithBootstrapButtons.fire(
                          'Cancelled',
                          'Your Code is safe :)',
                          'error'
                        )
                    }
                })
                //code = $(tr).find("td:eq(0)").text().trim();
                //$.getJSON("/DeleteSals", { code: code }).done(function (data) {
                //    if (data.DeleteFlag) {
                //        tr.remove();
                //    }
                //});
            }

            else {
                if ($(tr).find("td:eq(0)").text().trim() != '') {
                    var nameTd = $(tr).find("td:eq(1)");

                    var nameEdit = $('#hdname').val();// $(tr).find("[name*='txtName']").val().trim();
                    var hdnEditMode = $(this).parent().find('input:hidden:first');
                    nameTd.html(nameEdit);
                    tr.find("[name^='Edit']").html('<span class="glyphicon glyphicon-pencil"></span>');

                    tr.find("[name^='Edit']").attr('title', 'Edit');
                    $(this).html('<span class="glyphicon glyphicon-trash"></span>');
                    //$(this).text("Delete");
                    $(this).attr('title', 'Delete');
                    hdnEditMode.val("false");
                }
                else {
                    tr.remove();
                }
                tableDis("F");
                tr.find("[name^='Add']").html('<span class="glyphicon glyphicon-pencil"></span>');
            }
            }
        });

     
    });

    function GetPayDeductOnDDL(index) {

        if (paydeductons.length > 0) {
            var ddlPayDeductOn = "<select class='form-control' name='ddlPayDeductOn" + index + "'>";
            for (var i in paydeductons) {
                ddlPayDeductOn += "<option value='" + paydeductons[i].Code + "'>" + paydeductons[i].Name + "</option>";
            }
            ddlPayDeductOn += "</select>";
        }
        return ddlPayDeductOn;
    }

    function GetPayDeductOns() {

        $.ajax({
            url: "/Commontable1",
            dataType: "json",
            success: function (data) {
                paydeductons = data;
            },
            error: function () {
                alert('error occurred');
            }
        });
        return paydeductons;
    }

    var k = 0;
    function tableDis(k) {
        if (k == "T") {
            $("#tblUnits tbody tr").find("[name^='Edit']").prop("disabled", true);
            $("#tblUnits tbody tr").find("[name^='Delete']").prop("disabled", true);
            $("#btnAdd").prop('disabled', true);
        }
        else {
            $("#tblUnits tbody tr").find("[name^='Edit']").prop("disabled", false);
            $("#tblUnits tbody tr").find("[name^='Delete']").prop("disabled", false);
            $("#btnAdd").prop('disabled', false);

        }
    }
</script>
<script>
$(document).ready(function(){
    //$('[data-toggle="tooltip"]').tooltip();
    $(".edit").attr('title', 'Edit');
    $(".delete").attr('title', 'Delete');
});
</script>
<br />

<div class="panel panel-default">
    <div class="panel-body">
        <input type="hidden" id="hdname"/>
        <button class="btn btn-primary" id="btnAdd" style="float:right">Add</button>
        <table class="table table-bordered" id="tblUnits" >
            <thead>
                <tr class="tr">
                    <th>
                        @Html.DisplayNameFor(model => model.Code)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    @*<th>
                        @Html.DisplayNameFor(model => model.Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.AmtType)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PayDeductOn)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SNo)
                    </th>*@

                    <th></th>
                </tr>
            </thead>
            <tfoot>
                <tr class="tr">
                    <td>
                        @Html.DisplayNameFor(model => model.Code)
                    </td>
                    <td>
                        @Html.DisplayNameFor(model => model.Name)
                    </td>
                    @*<th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AmtType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PayDeductOn)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SNo)
                </th>*@

                    <th></th>
                </tr>
            </tfoot>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Code)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        @*<td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AmtType)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PayDeductOn)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SNo)
                        </td>*@


                        <td>
                            <button class="btn btn-primary" data-toggle="tooltip" title="Edit" name="@string.Concat("Edit",counter)"><span class="glyphicon glyphicon-pencil"></span></button>
                            <button class="btn btn-danger" data-toggle="tooltip" title="Delete" name="@string.Concat("Delete",counter)"><span class="glyphicon glyphicon-trash"></span></button>
                            <input type="hidden" name="@string.Concat("EditMode",counter)" value="false" />
                            @Html.HiddenFor(m => item.CmpyCode)
                        </td>
                    </tr>
                    counter++;
                }
            </tbody>
        </table>
        @Html.Hidden("Counter", counter)

    </div>
</div>



