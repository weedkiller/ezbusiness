@model EzBusiness_ViewModels.Models.FreightManagement.FFM_VOYAGE_VM
@{
    var counter = 1;
}
<script src="~/Scripts/jquery-3.1.1.js"></script>
<script src="~/Scripts/moment.min.js"></script>
<script src="~/Scripts/datatables/js/jquery.dataTables.min.js"></script>
<script src="~/Scripts/datatables/js/dataTables.bootstrap4.min.js"></script>
<script src="~/Scripts/bootstrap-select.min.js"></script>
<link href="~/Content/bootstrap-select.min.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>
<script src="~/Scripts/EzComNDW.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<link href="~/Styles/jquery-ui.css" rel="stylesheet" />

<script>
  
    $(function () {
        //EzTableRowDel("#tablePODetails", "[name*='btnDelete']");
        debugger;
        var counter = parseInt($("#hdnCounter").val());
        $("#tablePODetails").on("click", "[name*='btnDelete']", function () {

            $(this).closest("tr").remove();
            counter = 1;
            $('#tablePODetails tbody tr td:nth-child(1)').each(function (e) {
                var tr1 = $(this).closest("tr");
                tr1.find(":first").text(counter);
                counter++;
            });
        });
      //  EzAutoCompTxt1("#txtport", "#hdntxtport", "/FFM_Quotation/GetPortList");
        EzAutoCompTxt1("#FFM_VESSEL_CODE", "#hdnFFM_VESSEL_CODE", "/GetVessalCode");
        EzAutoCompTxtE("#FFM_VESSEL_CODE", "#hdnFFM_VESSEL_CODE", "/GetVessalCode", false, "");
       
        $('.selectpicker').selectpicker('refresh');
        EzAutotxtEventTbl12("#tablePODetails", "focus", "[name*='txtport']", "[name*='hdntxtport']", "/FFM_Quotation/GetPortList", false, "");
        var tblcntr1 = $("#tablePODetails tbody tr");
        var index3 = 1;
        tblcntr1.each(function (index3, item) {            
            $("[name*='txtsrno" + (index3 + 1) + "']").val($("[name*='hdnsrno" + (index3 + 1) + "']").val());
            $("[name*='txtRotation" + (index3 + 1) + "']").val($("[name*='hdnROTATION" + (index3 + 1) + "']").val());
            $("[name*='txtport" + (index3 + 1) + "']").val($("[name*='hdntxtport" + (index3 + 1) + "']").val());
            //$("[name*='ETA" + (index3 + 1) + "']").val($("[name*='hdnDocStatus" + (index3 + 1) + "']").val());
            if ($("[name*='hdnETA" + (index3 + 1) + "']").val() == undefined)
                EzdtePk("[name*='ETA" + (index3 + 1) + "']");
            else
                $("[name*='txtETA" + (index3 + 1) + "']").val(EzdteTblPkEdit($("[name*='hdnETA" + (index3 + 1) + "']").val()));
            if ($("[name*='hdnETB" + (index3 + 1) + "']").val() == undefined)
                EzdtePk("[name*='ETB" + (index3 + 1) + "']");
            else
                $("[name*='txtETB" + (index3 + 1) + "']").val(EzdteTblPkEdit($("[name*='hdnETB" + (index3 + 1) + "']").val()));
            if ($("[name*='hdnETD" + (index3 + 1) + "']").val() == undefined)
                EzdtePk("[name*='ETD" + (index3 + 1) + "']");
            else
                $("[name*='txtETD" + (index3 + 1) + "']").val(EzdteTblPkEdit($("[name*='hdnETD" + (index3 + 1) + "']").val()));
            $("[name*='txtPortStayhrs" + (index3 + 1) + "']").val($("[name*='hdnPortStayHourse" + (index3 + 1) + "']").val());
            // $("[name*='IssuePlace" + (index3 + 1) + "']").val($("[name*='hdnIssuePlace" + (index3 + 1) + "']").val());
            // $("[name*='DocumentPath" + (index3 + 1) + "']").val($("[name*='SourceFile" + (index3 + 1) + "']").prop('defaultValue'));
            $("[name*='txtSailinghrs" + (index3 + 1) + "']").val($("[name*='hdnSailingHrs" + (index3 + 1) + "']").val());
            index3 = index3 + 1;
        });

        $("#tablePODetails tbody tr:last").find("[name*='txtsrno']").val(counter);
        var counter =  parseInt($("#hdnCounter").val())+1;
       
        $("#tablePODetails").on("change", "[name*='txtRotation']", function () {
            
            if (EzHeadTxtvalid("[name *= 'FFM_VESSEL_CODE'] option:selected", "#tablePODetails tbody tr:last", "[name *= 'txtRotation']", "Please Enter VESSEL CODE", '0', '0') == true) {
                return;
            }

            if (EzHeadTxtvalid("[name *= 'FFM_VOYAGE01_CODE']", "#tablePODetails tbody tr:last", "[name *= 'txtRotation']", "Please Enter VOYAGE CODE", '0', '0') == true) {
                return;
            }
            //Ezdteformtcurtime();
            //$(".time1").datetimepicker("destroy");
            tbldtpicker();
            $(".datepicker").datetimepicker("destroy");
            var tr = $(this).closest('tr');
            var tcunt = $("#tablePODetails").find("tr").length;
            drec = [];
            $('#tablePODetails tbody tr td:nth-child(1)').each(function () {
                //add item to array
                var ab = $(this).find("[name *= 'txtRotation']").val();
                drec.push(ab);
            });
           
            drec.splice($.inArray(tr.find("[name *= 'txtRotation']").val(), drec), 1);
            if ($.inArray(tr.find("[name *= 'txtRotation']").val(), drec) >= 0) {
                var dr = tr.find("[name *= 'txtRotation']").val();
                tr.css("background", "red");
                tr.find("[name *= 'txtRotation']").focus();
                EzAlerterrtxt("Already Exist Code '" + dr + "'");
                tr.find("[name *= 'txtRotation']").val('');
            }
            else {
                tr.css("background", "");
                if (tr.is(":last-child")) {
                    $('#tablePODetails tr:last').clone().insertAfter('#tablePODetails tr:last');
                    var trLast = $("#tablePODetails tr:last");
                    $("<td><button type='button' class='btn btn-danger' name='btnDelete" + counter + "')'><span class='glyphicon glyphicon-remove'></span></button></td>")
                               .appendTo("#tablePODetails tbody tr:nth-last-child(2)");
                    trLast.find("[name*='txtsrno']").val(tcunt);
                    var txtarry1 = [];
                    var droparry = [];
                    txtarry1.push('txtsrno', 'txtRotation', 'txtETA', 'txtETAB', 'txtETD', 'txtPortStayhrs', 'txtSailinghrs');
                    droparry.push('txtport');
                    EzTbltxtdrpidchanged(txtarry1, counter, "txt", trLast);
                    EzTbltxtdrpidchanged(droparry, counter, "drp", trLast);
                    trLast.find("[name *= 'txtRotation']").val('');
                    trLast.find(":first").text(counter);
                    counter++;
                }
            }
            
        });
        $('body').on('focusin', '.datepicker', function () {
            $('.datepicker').datetimepicker({
                // defaultDate: new Date(),
                format: 'DD/MM/YYYY',
                showClose: true,
                showClear: true,
            });
        });
        $('body').on('focusin', '.time1', function () {
            $('.time1').datetimepicker({
                //defaultDate: new Date(),
                format: 'LT',
                showClose: true,
                showClear: true,
            });

        });

       // EzDropFillEvent("FFM_VESSEL_CODE", "click", "FFM_VESSEL_CODE", "GetVessalCode");
        //EzDropFillEventTbl1("#tablePODetails", "[name*='txtport']", "click", "[name*='txtport']", "/FFM_Quotation/GetPortList", "hdnPORT", true);
  });

</script>
<div id="POContainer">
    @{
        var TypeListdata1 = new SelectList(new[]
        {
            new SelectListItem { Text = "-Select-", Value = "-1" },
            }, "Value", "Text");
    }
    <div class="panel panel-default" id="showAddpanel">
        <div class="panel-body">
            <div>
                <div class="form-horizontal">
                    <div class="form-body">
                        <div class="row">
                            <input type="hidden" id="joindate" />
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">Vessal Code</label>
                                    <div class="col-md-8 input-field">
                                        @*<select class="form-control" id="ddlvessalcode" name="ddlvessalcode"></select>*@
                                        @*@Html.TextBoxFor(m => m.FFM_VESSEL_CODE, new { @class = "form-control" })*@
                                        @*@Html.DropDownListFor(m => m.FFM_VESSEL_CODE, Model.VessalCodeList, new { @class = "form-control", @data_live_search = "true" })*@
                                        @*@Html.HiddenFor(m=>m.FFM_VESSEL_CODE)*@
                                        @Html.TextBoxFor(m => m.FFM_VESSEL_CODE, new { @class = "form-control", @placeholder = "Select Vessal code" })
                                        <input id="hdnFFM_VESSEL_CODE" type="hidden" class="form-control" name="hdnFFM_VESSEL_CODE" value="-1" />
                                    </div>
                                </div>
                            </div>
                            <!--/span-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">Vessal Name</label>
                                    <div class="col-md-8">
                                        @*<input type="text" id="txtvessalname" class="form-control" />*@
                                        @Html.TextBoxFor(m => m.NAME, new { @class = "form-control", @disabled = "disabled" })
                                    </div>
                                </div>
                            </div>
                            <!--/span-->
                        </div>
                        <!--/row-->
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">VoyageCode</label>
                                    <div class="col-md-8 input-field">
                                        @*<input type="text" id="txtVoyageCode" class="form-control" />*@
                                        @Html.TextBoxFor(m => m.FFM_VOYAGE01_CODE, new { @class = "form-control", @disabled = "disabled" })
                                    </div>
                                </div>
                            </div>
                            <!--/span-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">Display Status</label>
                                    <div class="col-md-8 input-field">
                                        <select id="ddlstatus" class="form-control">
                                            <option value="Y">Yes</option>
                                            <option value="N">No</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <!--/span-->
                        </div>
                    </div>
                </div><br />
            </div>
        </div>
    </div>

    <ul class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#home">Detail</a></li>
    </ul>
    <div class="tab-content">
        <div id="home" class="tab-pane fade in active">
            <br /><br />
            <div class="row"></div>
            <div class="col-md-12">
                <table class="table table-bordered " id="tablePODetails">
                    <thead>
                        <tr class="tr">

                            <th>
                                Sr.No
                            </th>
                            <th>
                                Rotation
                            </th>
                            <th>
                                Port
                            </th>
                            <th>
                                ETA
                            </th>
                            <th>
                                ETB
                            </th>
                            <th>
                                ETD
                            </th>
                            <th>
                                Port Stay Hrs
                            </th>
                            <th>
                                sailing Hrs
                            </th>
                            <th></th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model.newdetails)
            {
            <tr>
                <td>
                    <div class="grid-group">
                        @Html.TextBox(string.Concat("txtsrno", counter), null, new { @class = "grid-control", @readonly = "readonly" })
                        @Html.Hidden(string.Concat("hdnsrno", counter), item.SNO)
                    </div>
                </td>
                <td>
                    <div class="grid-group">
                        @Html.TextBox(string.Concat("txtRotation", counter), null, new { @class = "grid-control"})
                        @Html.Hidden(string.Concat("hdnROTATION", counter), item.ROTATION)
                    </div>
                </td>
                <td>
                    <div class="grid-group">
                        @Html.TextBox(string.Concat("txtport", counter), null, new { @class = "grid-control" })
                        @Html.Hidden(string.Concat("hdntxtport", counter), item.PORT)
                    </div>
                </td>
                <td>
                    <div class="grid-group">
                        @Html.TextBox(string.Concat("txtETA", counter), null, new { @class = "grid-control datepicker" })
                        @Html.Hidden(string.Concat("hdnETA", counter), item.ETA)
                    </div>
                </td>
                <td>
                    <div class="grid-group">
                        @Html.TextBox(string.Concat("txtETB", counter), null, new { @class = "grid-control datepicker" })
                        @Html.Hidden(string.Concat("hdnETB", counter), item.ETB)
                    </div>
                </td>
                <td>
                    <div class="grid-group">
                        @Html.TextBox(string.Concat("txtETD", counter), null, new { @class = "grid-control datepicker" })
                        @Html.Hidden(string.Concat("hdnETD", counter), item.ETD)
                    </div>
                </td>

                <td>
                    <div class="grid-group">
                        @Html.TextBox(string.Concat("txtPortStayhrs", counter), null, new { @class = "grid-control", @Type = "Number" })
                        @Html.Hidden(string.Concat("hdnPortStayHourse", counter), item.PortStayHours)
                    </div>
                </td>
                <td>
                    <div class="grid-group">
                        @Html.TextBox(string.Concat("txtSailinghrs", counter), null, new { @class = "grid-control", @Type = "Number" })
                        @Html.Hidden(string.Concat("hdnSailingHrs", counter), item.SailingHrs)
                    </div>
                </td>
                <td>
                    <button type="button" class="btn btn-danger" name="@string.Concat("btnDelete",counter)"><span class="glyphicon glyphicon-remove"></span></button>
                </td>
            </tr>
                counter++;
            }
                    <tr>

                            <td>
                                <div class="grid-group">
                                    @Html.TextBox(string.Concat("txtsrno", counter), counter, new { @class = "grid-control", @readonly = "readonly" })
                                </div>
                            </td>
                            <td>
                                <div class="grid-group">
                                    @Html.TextBox(string.Concat("txtRotation", counter), null, new { @class = "grid-control" })
                                </div>
                            </td>
                            <td>
                                <div class="grid-group">
                                 
                                    @Html.TextBox(string.Concat("txtport", counter), null, new { @class = "grid-control" })
                                </div>
                            </td>
                            <td>
                                <div class="grid-group">
                                    @Html.TextBox(string.Concat("txtETA", counter), null, new { @class = "grid-control datepicker" })
                                </div>
                            </td>
                            <td>
                                <div class="grid-group">
                                    @Html.TextBox(string.Concat("txtETB", counter), null, new { @class = "grid-control datepicker" })
                                </div>
                            </td>
                            <td>
                                <div class="grid-group">
                                    @Html.TextBox(string.Concat("txtETD", counter), null, new { @class = "grid-control datepicker" })
                                </div>
                            </td>
                            <td>
                                <div class="grid-group">
                                    @Html.TextBox(string.Concat("txtPortStayhrs", counter), null, new { @class = "grid-control", @Type = "Number" })
                                </div>
                            </td>
                            <td>
                                <div class="grid-group">
                                    @Html.TextBox(string.Concat("txtSailinghrs", counter), null, new { @class = "grid-control", @Type = "Number" })
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
                @Html.Hidden("hdnCounter", counter)
               
            </div>
            </div>
            </div>
        </div>

    