@model IEnumerable<EzBusiness_ViewModels.Models.MaterialMgmt.UnitVM>


@{
    ViewBag.Title = "Unit Master";
    var counter = 1;
}




@*@Scripts.Render("~/bundles/jquery")*@
<script src="~/Scripts/EzComNDW.js"></script>

<script src="~/Scripts/EzComNDW.js"></script>
<script>
    $(function () {
        EzAuthentication("/Loan");
        var n = EzAuthenticationBtn("/Loan", "ViewIt");
        if (n == 1) {
            Ezsidetbl('#tblUnits', '#tblUnits tfoot th', true);
            $('#tblUnits').show();

        } else {
            $('#tblUnits').hide();
        }
    });
</script>
<script>
    var units = [];
    $(function () {
        $("#tblUnits1").hide();
        $("#btnAdd").click(function () {
            var n = EzAuthenticationBtn("/Loan", "NewIt");
            if (n == 1) {
                $("#tbldiv").hide();
                var abk = [];
                abk.push('#btnAdd', "[name*='Edit']", "[name *= 'Delete']");
                Ezprop(abk, "disabled", true);
                abk = [];
                abk.push('#btnCancel', '#btnSave');
                Ezprop(abk,"disabled", false);
                $("#tblUnits1 tbody tr").css("background", "");
                $("#tblUnits1").show();
                Ezerrormsg("#ErrorMessage", "");
            }
        });
        var counter = $("#Counter").val();
        /*Add Table Change Event*/
        $("#tblUnits1").on("change", "[name*='txtPRLM001_CODE']", function () {
            debugger;
            var tr = $(this).closest('tr');

            drec = [];
            $('#tblUnits1 tbody tr td:nth-child(1)').each(function () {
                //add item to array
                var ab = $(this).find("[name *= 'txtPRLM001_CODE']").val();
                drec.push(ab);
            });

            drec.splice($.inArray(tr.find("[name *= 'txtPRLM001_CODE']").val(), drec), 1);

            if ($.inArray(tr.find("[name *= 'txtPRLM001_CODE']").val(), drec) >= 0)
            {
                var dr = tr.find("[name *= 'txtPRLM001_CODE']").val();
                tr.css("background", "red");
                tr.find("[name *= 'txtPRLM001_CODE']").focus();
                alert("Already Exist Code '" + dr + "'");
                tr.find("[name *= 'txtPRLM001_CODE']").val('');

            }
            else {
                tr.css("background", "");
                if (tr.is(":last-child")) {
                    tr.clone(true, true).insertAfter(tr);
                    var trLast = $("#tableMetaSettings tr:last");
                    $("<td><button type='button' class='btn btn-danger' name='btnDelete" + counter + "')'><span class='glyphicon glyphicon-remove'></span></button></td>")
                               .appendTo("#tblUnits1 tbody tr:nth-last-child(2)");
                    $(this).closest('tr').next('tr').find("[name*='txtPRLM001_CODE']").val('');
                    trLast.find("[name *= 'txtPRLM001_CODE']").attr({
                        "name": ("txtPRLM001_CODE" + counter)
                    });
                    trLast.find("[name *= 'txtName']").attr({
                        "name": ("Name" + counter)
                    });
                    trLast.find("[name *= 'txtAct_code']").attr({
                        "name": ("txtAct_code" + counter)
                    });
                    trLast.find(":first").text(counter);
                }
            }
            counter++;
        });

        EztableTabEve("#tblUnits1", "[name*='txtName']", "[name *= 'txtAct_code']", "Please Enter Name", 'T',"");
        EztableTabEve("#tblUnits1", "[name*='txtPRLM001_CODE']", "[name *= 'txtName']", "Please Enter Code", 'T',"");
        EztableLstEnt("#tblUnits1", "[name*='txtAct_code']", "[name *= 'txtPRLM001_CODE']",'T',"");
        /*Name Tab Event*/

        /*Refresh */
        $("#btnCancel").click(function () {
            debugger;
            if ($("#tblUnits1 > tbody > tr").length > 1) {
                $("#tblUnits1 tbody tr td:last-child").remove();
            }
            $("#tblUnits1 tbody").find("tr:gt(0)").remove();
            $("#tbldiv").show();

            $("#tblUnits1").hide();
            var abk1 = [];
            abk1.push("[name*='txtPRLM001_CODE']", "[name*='txtName']", "[name*='txtAct_code']");
            Ezsettxtclr(abk1);
            abk1 = [];
            abk1.push("#btnCancel", "#btnSave");
            Ezprop(abk1, "disabled", true);
            abk1 = [];
            abk1.push('#btnAdd', "[name*='Edit']", "[name*='Delete']");
            Ezprop(abk1, "disabled", false);
            Ezerrormsg("#ErrorMessage", "");
        });
        /*Save Unit Table */
        $("#btnSave").click(function () {

           var UnitMaster=  {
               UnitNew: []
            };
            $("#tblUnits1 tbody tr").each(function (index, item) {
                var Code = $(this).find("[name*='txtMM001_Code']").val();
                var  Name = $(this).find("[name*='txtName']").val();
                var MMunitType = $(this).find("[name*='txtUnitType']").val();
                if ((StsCode != "") && (StsName != "")) {
                    var UnitDetail = {
                        Code: Code,
                        Name: Name,
                        UnitType: MMunitType
                    };
                    UnitMaster.UnitNew.push(UnitDetail);
                }
            });
            var validationResult = ValidateForm(UnitMaster);
            if (validationResult.formValid) {
                $.post("/MaterialMgmt/SaveUnit", unit).done(function (response) {
                if (response.Drecord == null)
                {
                    $("#tbldiv").show();
                    response.Drecord = 0;
                }
                $("#tblUnits1 tbody tr").each(function (index, item) {
                    var tr = $(this).closest("tr");
                    var codeAdd = $(tr).find("[name*='txtMM001_Code']").val().trim();
                    var nameAdd = $(tr).find("[name*='txtName']").val().trim();
                    var UnitTypeAdd = $(tr).find("[name*='txtUnitType']").val().trim();
                    if(response.Drecord.length>0)
                    {
                        var ary1 = [];
                        ary1 = response.Drecord;
                        if ($.inArray(codeAdd, ary1) < 0 && codeAdd != '' && nameAdd !='') {
                                $(this).closest('tr').remove();
                                var counter = $("#Counter").val();
                                var firstRow = $('#tblUnits tbody tr:first');

                                var newRow = "<tr><td>" + codeAdd + "</td><td>" + nameAdd +
                                    "</td><td>" + UnitTypeAdd + "</td> ";
                                newRow += "</td><td><button class='btn btn-primary' name='Edit" + counter + "' disabled>Edit</button>&nbsp;<button class='btn btn-danger' name='DeleteNew" + counter +
                                    "' disabled>Delete</button><input type='hidden' name='EditMode" + counter + "' value='false'><input name='item.CmpyCode' type='hidden' value='" + response.CmpyCode +
                                    "'></td></tr>";
                                $(firstRow).after(newRow);
                            }
                            else if (codeAdd != '') {
                                $(this).closest('tr').css("background", "red");
                            }
                            else {
                                $(this).closest('tr').css("background", "");
                            }
                    }
                    else {
                        $("#tblUnits1 tbody").find("tr:not(:last)").remove();
                        var abk1 = [];
                        abk1.push("[name*='txtMM001_Code']", "[name*='txtName']", "[name*='txtUnitType']");
                        Ezsettxtclr(abk1);
                        $("#tblUnits1").hide();
                        if (codeAdd != '' && nameAdd !='') {
                        var counter = $("#Counter").val();
                        var firstRow = $('#tblUnits tbody tr:first');
                        var newRow = "<tr><td>" + codeAdd + "</td><td>" + nameAdd +
                            "</td><td>" + UnitTypeAdd + "</td> ";
                        newRow += "</td><td><button class='btn btn-primary' name='Edit" + counter + "' disabled><span class='glyphicon glyphicon-pencil'></span></button>&nbsp;<button class='btn btn-danger' name='DeleteNew" + counter +
                            "' disabled><span class='glyphicon glyphicon-trash'></span></button><input type='hidden' name='EditMode" + counter + "' value='false'><input name='item.CmpyCode' type='hidden' value='" + response.CmpyCode +
                            "'></td></tr>";
                        $(firstRow).after(newRow);
                        }
                        abk1 = [];
                        abk1.push("#btnCancel", "#btnSave");
                        Ezprop(abk1, "disabled", true);
                        abk1 = [];
                        abk1.push('#btnAdd', "[name*='Edit']", "[name*='Delete']");
                        Ezprop(abk1, "disabled", false);
                        EzAlertSave();

                        $(".dataTables_empty").replaceWith("");
                    }
                });
                });
            }
            else {
                EzAlerterr();
            }
        });

        function ValidateForm(UnitMaster) {
            var response = {
                ErrorMessage: "",
                formValid: false
            };
            if (UnitMaster.UnitNew.length == 0) {
                response.ErrorMessage += "Please Enter atleast One BankBranch code Details";
            }
            if (response.ErrorMessage.length == 0) {
                response.formValid = true;
            }

            return response;
        }
        $("#tblUnits1").on("click", "[name*='btnDelete']", function () {
            $(this).closest("tr").remove();
        });


        $(document).ajaxError(function (event, jqxhr, settings, thrownError) {
            console.log(thrownError);
        });

        $("#tblUnits").on("click", "[name^='Edit']", function () {
            var n = EzAuthenticationBtn("/Unit", "EditIt");
            if (n == 1) {
                var counter = $("#Counter").val();
                var hdnEditMode = $(this).parent().find('input:hidden:first');
                var hdnCmpyCode = $(this).parent().find("[name='item.CmpyCode']").val();
                var tr = $(this).closest("tr");
                var hdnCode = $(tr).find("td:eq(0)").text().trim();
                var index = $(this).attr("name").substring(4);
                var nameTd = $(tr).find("td:eq(1)");
                var unicodenameTd = $(tr).find("td:eq(2)");
                var editButton = $(this);

                if (hdnEditMode.val() == "true") {
                    var nameEdit = $(tr).find("[name*='txtName']").val().trim();
                    var unicodenameEdit = $(tr).find("[name*='txtUnitType']").val().trim();
                    var Lons = {
                        CmpyCode: hdnCmpyCode,
                        Code: hdnCode,
                        Name: nameEdit,
                        UnitType: unicodenameEdit,
                        EditFlag: true
                    };

                    $.post("/MaterialMgmt/SaveUnit", Lons).done(function (response) {
                        nameTd.text(response.Name);
                        unicodenameTd.text(response.Act_code);
                        hdnEditMode.val("false");
                        editButton.html('<span class="glyphicon glyphicon-pencil"></span>');
                        tr.find("[name^='Delete']").html('<span class="glyphicon glyphicon-trash"></span>');
                        tableDis("F");
                        EzAlertUpd(hdnCode);
                    });
                    $(document).ajaxError(function (event, jqxhr, settings, thrownError) {
                        console.log(thrownError);
                    });
                } else {
                    var name = $(tr).find("td:eq(1)").text();
                    $('#inpNme').val(name.trim());
                    nameTd.html("<input type='text' name='txtName" + index + "' value='" + name.trim() + "' />");
                    var unicodename = $(tr).find("td:eq(2)").text();
                    $('#inpAct').val(unicodename.trim());
                    unicodenameTd.html("<input type='text' name='txtUnitType" + index + "' value='" + unicodename.trim() + "' />");
                    $(this).html('<span class="glyphicon glyphicon-upload"></span>')
                    hdnEditMode.val("true");
                    tableDis("T");
                    $(this).attr("disabled", false);
                    tr.find("[name^='Delete']").prop("disabled", false);
                    tr.find("[name^='Delete']").html('<span class="glyphicon glyphicon-remove"></span>');
                    tr.find("[name^='Delete']").attr('title', 'Cancel');
                }
            }
        });

        $("#tblUnits").on("click", "[name^='Delete']", function (e, data) {
            var n = EzAuthenticationBtn("/Unit", "DeleteIt");
            if (n == 1) {
                var tr = $(this).closest("tr");
                var hdnCmpyCode = $(this).parent().find("[name='item.CmpyCode']").val();
                var codeTd = $(tr).find("td:eq(0)");
                var hdnMode = $(this).parent().find('input:hidden:first');
                var code = "";

                if (hdnMode.val() == "false" ) {
                    const swalWithBootstrapButtons = Swal.mixin({
                        confirmButtonClass: 'btn btn-success',
                        cancelButtonClass: 'btn btn-danger',
                        buttonsStyling: false,
                    })

                    swalWithBootstrapButtons.fire({
                        title: 'Are you sure?',
                        text: "You won't be able to revert this!",
                        type: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'No, cancel!',
                        reverseButtons: true
                    }).then((result) => {
                        if (result.value) {
                            code = $(tr).find("td:eq(0)").text().trim();
                            $.getJSON("/DeleteUnit", { Code: code, CmpyCode: hdnCmpyCode }).done(function (data) {
                                if (data.DeleteFlag) {

                                      tr.remove();
                                    if ($('#tblUnits tbody tr').length == 1 || $('#tblUnits tbody tr').length == 0) {
                                        //$(".dataTables_empty").replaceWith("No data available in table");
                                        var firstRow = $('#tblUnits tbody');
                                        var newRow = "<tr><td valign='top' colspan='4' class='dataTables_empty'>No data available in table</td></tr>";
                                        $(firstRow).append(newRow);
                                        $('.dataTables_info').replaceWith('Showing 0 to 0 of 0 entries');
                                    }

                                } else {
                                    EzAlertdele(code);
                                }
                            });
                            swalWithBootstrapButtons.fire(
                              'Deleted!',
                              'Your Code has been deleted.',
                              'success'
                            )

                        } else if (
                            // Read more about handling dismissals
                          result.dismiss === Swal.DismissReason.cancel
                        ) {
                            swalWithBootstrapButtons.fire(
                              'Cancelled',
                              'Your Code is safe :)',
                              'error'
                            )
                        }
                    })


                }
                else {
                    var nameTd = $(tr).find("td:eq(1)");
                    var unicodenameTd = $(tr).find("td:eq(2)");
                    var nameEdit = $('#inpNme').val(); //$(tr).find("[name*='txtName']").val().trim();
                    var unicodenameEdit = $('#inpAct').val();// $(tr).find("[name*='txtAct_code']").val().trim();
                    var hdnEditMode = $(this).parent().find('input:hidden:first');
                    nameTd.html(nameEdit);

                    var unicodename = $(tr).find("td:eq(2)").text();
                    unicodenameTd.html(unicodenameEdit);
                    tr.find("[name^='Edit']").html('<span class="glyphicon glyphicon-pencil"></span>');
                    tr.find("[name^='Edit']").attr('title', 'Edit');
                    $(this).html('<span class="glyphicon glyphicon-trash"></span>');
                    $(this).attr('title', 'Delete');
                    hdnEditMode.val("false");
                    tableDis("F");
                }
            }

        });



    });
    var k = 0;
    function tableDis(k) {
        if(k=="T")
        {
            $("#tblUnits tbody tr").find("[name^='Edit']").prop("disabled", true);
            $("#tblUnits tbody tr").find("[name^='Delete']").prop("disabled", true);
            $("#btnAdd").prop('disabled', true);
        }
        else
        {
            $("#tblUnits tbody tr").find("[name^='Edit']").prop("disabled", false);
            $("#tblUnits tbody tr").find("[name^='Delete']").prop("disabled", false);
            $("#btnAdd").prop('disabled', false);
        }
    }


</script>

<script>
$(document).ready(function(){
    $(".edit").attr('title', 'Edit');
    $(".delete").attr('title', 'Delete');
});
</script>
<ol class="breadcrumb"> 
    <li class="active strong1">
        <strong>Unit Master</strong>
    </li>
</ol>
<div class="title-action">
    <button class="btn btn-primary btn1" id="btnAdd"><span class="glyphicon glyphicon-plus-sign"></span>&nbsp;Add</button>
    <button type="submit" class="btn btn-primary btn1" id="btnSave" disabled><span class="glyphicon glyphicon-floppy-disk"></span>&nbsp; Save</button>
    <button class="btn btn-warning btn1" id="btnCancel" disabled><span class="glyphicon glyphicon-off"></span>&nbsp; Cancel</button>
    <input type="hidden" id="hdnOperationMode" value="" />

</div>
<label class="row" id="ErrorMessage" style="color:red;">
    <strong></strong>
</label>
<div class="panel panel-default">
    <div class="panel-body">
        <input id="inpNme" type="hidden" />
        <input id="inpAct" type="hidden" />
        <table class="table table-bordered" id="tblUnits1">
            <thead>
                <tr class="tr">
                    <th>
                        @Html.DisplayNameFor(model => model.Code)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UnitType)
                    </th>
                    <th></th>
                </tr>
            </thead>

            <tbody>
                <tr>
                    <td>
                        <div class="grid-group">
                            @Html.TextBox(string.Concat("txtMM001_Code", counter), null, new { @class = "grid-control" })
                        </div>
                    </td>
                    <td>
                        <div class="grid-group">
                            @Html.TextBox(string.Concat("txtName", counter), null, new { @class = "grid-control" })
                        </div>
                    </td>                 
                    <td>
                        <div class="grid-group">
                            @Html.TextBox(string.Concat("txtUnitType", counter), null, new { @class = "grid-control" })
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
        <div id="tbldiv" >
            <table class="table" id="tblUnits">
                <thead>
                    <tr class="tr">
                        <th>
                            @Html.DisplayNameFor(model => model.Code)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.UniCodeName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.UnitType)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Code)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UniCodeName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UnitType)
                            </td>
                            <td>
                                <button class="btn btn-primary" data-toggle="tooltip" title="Edit" name="@string.Concat("Edit",counter)"><span class="glyphicon glyphicon-pencil"></span></button>
                                <button class="btn btn-danger delete" data-toggle="tooltip" title="Delete" name="@string.Concat("Delete",counter)"><span class="glyphicon glyphicon-trash"></span></button>
                                <input type="hidden" name="@string.Concat("EditMode",counter)" value="false" />
                                @Html.HiddenFor(m => item.CmpyCode)
                            </td>
                         
                        </tr>
                        counter++;
                    }

                </tbody>
            </table>
            @Html.Hidden("Counter", counter)
        </div>
    </div>
</div>







