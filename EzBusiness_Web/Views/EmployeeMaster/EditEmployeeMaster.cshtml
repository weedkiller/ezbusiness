@model EzBusiness_ViewModels.Models.Humanresourcepayroll.Employee_VM
@{
    var counter = 1;
    var counter1 = 1;
    var counter2 = 1;
}

<script src="~/Scripts/jquery-3.1.1.js"></script>
<script src="~/Scripts/moment.min.js"></script>
<script src="~/Scripts/datatables/js/jquery.dataTables.min.js"></script>
<script src="~/Scripts/datatables/js/dataTables.bootstrap4.min.js"></script>
<script src="~/Scripts/bootstrap-select.min.js"></script>
<link href="~/Content/bootstrap-select.min.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>
<script src="~/Scripts/EzComNDW.js"></script>
<script>
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#user_img').attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }
    $(function () {
        debugger;
        $('#user_img').attr("src", $('#photpath').val());
        var dte='';      
        EzdtePkEdit('#JoiningDate1', "#JoiningDate", 'DD/MM/YYYY');
        EzdtePkEdit('#DOB1', "#DOB", 'DD/MM/YYYY');
        EzdtePkEdit('#LastRetDate1', "#LastRetDate", 'DD/MM/YYYY');
        EzdtePkEdit('#ContactDate1', "#ContactDate", 'DD/MM/YYYY');
        EzdtePkEdit('#AbscondingDate1', "#AbscondingDate", 'DD/MM/YYYY');
        //EzdtePkEdit('#StartDate1', "#StartDate", 'DD/MM/YYYY');
        //EzdtePk('#StartDate1,#EndDate1,#NomineeDOB1');
     
       // ezValidateNumbers("#tablePODetails1", "[name*='ObtainedYear']");
       

        debugger;

        $('.selectpicker').selectpicker('refresh');

        EzcheckedFnEdit('input[name="LeaveStatus"]', "[name*='LeaveStatus']", 'input[name="LeaveStatus"]:hidden');
        EzcheckedFnEdit('input[name="SupervisorYN"]', "[name*='SupervisorYN']", 'input[name="SupervisorYN"]:hidden');
        EzcheckedFnEditS('input[name="PhysicallyDisabledYN"]', "[name*='PhysicallyDisabledYN']", 'input[name="PhysicallyDisabledYN"]:hidden', "input[name='PhysicallyDisabled']");
        EzcheckedFnEditD('input[name="AbscondingYN"]', "[name*='AbscondingYN']", 'input[name="AbscondingYN"]:hidden', "input[name='AbscondingDate']");

        EzcheckedFnE('input[name="LeaveStatus"]', "[name*='LeaveStatus']");
        EzcheckedFnE('input[name="SupervisorYN"]', "[name*='SupervisorYN']");
        EzcheckedFnES('input[name="PhysicallyDisabledYN"]', "[name*='PhysicallyDisabledYN']", "input[name='PhysicallyDisabled']");
        EzcheckedFnED('input[name="AbscondingYN"]', "[name*='AbscondingYN']", "input[name='AbscondingDate']");
      
        $('#DivisionCode').change(function () {
           
            var divcode = $('#DivisionCode option:selected').val();
            $.get("EmployeeMaster/GetBranchCodeList1", { divcode: divcode }).done(function (response) {
                $('#BranchCode').empty();
                $('#DepartmentCode').empty();
                var ary = [];
                ary = response;
                for (var i = 0; i < ary.length; i++) {
                    $('#BranchCode').append('<option value="' + ary[i].Value + '" selected="">' + ary[i].Text + '</option>');
                }
                $('#DepartmentCode').append('<option value="0" selected="">-Select-</option>');
                $('#BranchCode').val(0);
                $('#DepartmentCode').val(0);
                $('.selectpicker').selectpicker('refresh');
            });
        });
        $('#BranchCode').change(function () {
           
            var divcode = $('#DivisionCode option:selected').val();
            var Brancode = $('#BranchCode option:selected').val();
            $.get("EmployeeMaster/GetDepartmentList", { divcode: divcode, Brancode: Brancode }).done(function (response) {
                $('#DepartmentCode').empty();
                var ary = [];
                ary = response;
                for (var i = 0; i < ary.length; i++) {
                    $('#DepartmentCode').append('<option value="' + ary[i].Value + '" selected="">' + ary[i].Text + '</option>');
                }
                $('#DepartmentCode').val(0);
                $('.selectpicker').selectpicker('refresh');
            });
        });
        $("#sourcephoto").change(function () {
            debugger;
            readURL(this);

            var data = new FormData();
            var files = $("#sourcephoto").get(0).files;
            if (files.length > 0) {
                data.append("MyImages", files[0]);
            }
            $.ajax({
                url: "/EmployeeMaster/UploadFile",
                type: "POST",
                processData: false,
                contentType: false,
                data: data,
                success: function (response) {
                    //code after success
                    $("#user_img").val(response);
                    $('input[name="photpath"]').val('/Images/' + response);

                },
                error: function (er) {
                    EzAlerterrtxt(er);
                }
            });
        });
        $("#tablePODetails2").on("change", "[name*='SourceFile']", function () {
           
            if (window.FormData != undefined) {
                //var FileUpload = $('#File').get(0);
                var files = $("[name*='SourceFile']").get(0).files;
                var fileData = new FormData();
                for (var i = 0; i < files.length; i++) {
                    fileData.append(files[i].name, files[i]);
                }
                $.ajax({
                    url: "/EmployeeMaster/UploadDoc",
                    type: "POST",
                    processData: false,
                    contentType: false,
                    data: fileData,
                    success: function (response) {
                       
                        //code after success
                        //  alert(response);
                        //  $("#user_img").val(response);
                        $('input[name*="DocumentPath"]').val('/Uploads/' + response);

                    },
                    error: function (er) {
                        EzAlerterrtxt(er);
                    }
                });
            }
        });
        $('#BankCode').change(function () {
           
            var BanCode = $('#BankCode option:selected').val();

            $.get("EmployeeMaster/GetBankBranchList", { BankCode: BanCode }).done(function (response) {
                $('#BankBranchCode').empty();
                var ary = [];
                ary = response;
                for (var i = 0; i < ary.length; i++) {
                    $('#BankBranchCode').append('<option value="' + ary[i].Value + '" selected="">' + ary[i].Text + '</option>');
                }
                $('#BankBranchCode').val(0);
                $('.selectpicker').selectpicker('refresh');
            });
        });

      
         var Eary = [];
        Eary.push('input[name="AbscondingDate"]');
        Eary.push('input[name="RetirementDate"]');
        EzDisabledT(Eary);

      
        var counter = parseInt($("#hdnCounter").val());
        var counter1 = parseInt($("#hdnCounter1").val());
        var counter2 = parseInt($("#hdnCounter2").val());
      

        EzTableRowDel("#tablePODetails", "[name*='btnDelete']");
        EzTableRowDel("#tablePODetails1", "[name*='btnDelete']");
        EzTableRowDel("#tablePODetails2", "[name*='btnDelete']");

        $("#tablePODetails1").on("change", "[name*='Degree']", function () {          
            var tr = $(this).closest("tr");
         
            var docode = tr.find("[name*='Degree']").val();
            var doName = tr.find("[name*='Degree'] option:selected").text();
            tr.find("[name*='DegreeName']").val(docode);
        });

        
        $("#tablePODetails2").on("change", "[name*='SourceFile']", function () {
           
           
            if (window.FormData != undefined) {
                //var FileUpload = $('#File').get(0);
                var files = $("[name*='SourceFile']").get(0).files;
                var fileData = new FormData();
                for (var i = 0; i < files.length; i++) {
                    fileData.append(files[i].name, files[i]);
                }
                $.ajax({
                    url: "/EmployeeMaster/UploadDoc",
                    type: "POST",
                    processData: false,
                    contentType: false,

                    data: fileData,
                    success: function (response) {
                       
                        //code after success
                        //  alert(response);
                        //  $("#user_img").val(response);
                        $('input[name*="DocumentPath"]').val('/Uploads/' + response);

                    },
                    error: function (er) {
                        EzAlerterrtxt(er);
                    }
                });
            }
        });
        
        var counter2 = $("#counter2").val();
        $("#tablePODetails1").on("change", "[name*='Institution']", function () {
            tbldtpickerYY();
            // if (counter2 > 2) {
            $(".dt3").datetimepicker("destroy");
            // }
            var tr = $(this).closest("tr");
            // tr.find("[name *= 'ObtainedYear']").val(EzdtePkyyyy("[name *= 'ObtainedYear']"));
            if (tr.is(":last-child")) {
                tr.clone(true, true).insertAfter(tr);
                $("<td><button type='button' class='btn btn-danger' name='btnDelete" + counter2 + "')'><span class='glyphicon glyphicon-remove'></span></button></td>")
                               .appendTo("#tablePODetails1 tbody tr:nth-last-child(2)");

                //   $('.selectpicker').selectpicker('refresh');

                var trLast = $("#tableMetaSettings tr:last");

                var trLast1 = $("#tablePODetails1 tbody tr:last");
                trLast1.find("[name*='Institution']").val('');
                trLast1.find("[name*='Location']").val('');
                trLast1.find("[name*='Degree']").val(0);
                trLast1.find("[name*='DegreeName']").val('');
                trLast1.find("[name*='ObtainedYear']").val('');
                trLast1.find("[name*='Specification']").val('');




                trLast.find("[name *= 'Institution']").attr({
                    "name": ("Institution" + counter2)
                });
                trLast.find("[name *= 'Location']").attr({
                    "name": ("Location" + counter2)
                });
                trLast.find("[name *= 'Degree']").attr({
                    "name": ("Degree" + counter2)
                });
                trLast.find("[name *= 'ObtainedYear']").attr({
                    "name": ("ObtainedYear" + counter2)
                });
                trLast.find("[name *= 'Specification']").attr({
                    "name": ("Specification" + counter2)
                });
                counter2++;

            }
        });

        //counter1 = 1;
        var counter1 = $("#counter1").val();
        $("#tablePODetails").on("change", "[name*='NomineeName']", function () {
            tbldtpicker();
            // if (counter1 > 2) {
            $(".datepicker").datetimepicker("destroy");
            ///}
            //  $(".datepicker").datetimepicker("destroy");
            var tr = $(this).closest("tr");
            // tr.find("[name *= 'NomineeDOB']").val(EzdtePk("[name *= 'NomineeDOB']"));
            if (tr.is(":last-child")) {
                tr.clone(true, true).insertAfter(tr);
                $("<td><button type='button' class='btn btn-danger' name='btnDelete" + counter1 + "')'><span class='glyphicon glyphicon-remove'></span></button></td>")
                               .appendTo("#tablePODetails tbody tr:nth-last-child(2)");
                var trLast = $("#tableMetaSettings tr:last")
                $("#tablePODetails tbody tr:last").find("[name*='NomineeName']").val('');
                trLast.find("[name *= 'NomineeName']").attr({
                    "name": ("NomineeName" + counter1)
                });
                trLast.find("[name *= 'NomineeAddress']").attr({
                    "name": ("NomineeAddress" + counter1)
                });
                trLast.find("[name *= 'NomineeRelation']").attr({
                    "name": ("NomineeRelation" + counter1)
                });
                trLast.find("[name *= 'NomineeDOB']").attr({
                    "name": ("NomineeDOB" + counter1)
                });

                counter1++;

            }
        });

        //counter = 1;
        var counter = $("#counter").val();
        $("#tablePODetails2").on("change", "[name*='DocCode']", function () {
            debugger;
            tbldtpicker();
            //  $(".datepicker").datetimepicker("destroy");
            //if (counter > 2) {
            $(".datepicker").datetimepicker("destroy");
            //}
            //  counter = counter+1;
            var tr = $(this).closest("tr");
            var docode = tr.find("[name*='DocCode']").val();
            var doName = tr.find("[name*='DocCode'] option:selected").text();
            var sdate = tr.find("[name*='StartDate']").val();
            var edate = tr.find("[name*='EndDate']").val();
           
            if (tr.is(":last-child")) {
                tr.clone(true, true).insertAfter(tr);
                tr.find("[name*='DocCode']").val(docode);
                tr.find("[name*='DocName']").val(doName);
                //tr.find("[name *= 'StartDate']").val(sdate);
                //tr.find("[name *= 'EndDate']").val(edate);
                $("<td><button type='button' class='btn btn-danger' name='btnDelete" + counter + "')'><span class='glyphicon glyphicon-remove'></span></button></td>")
                    .appendTo("#tablePODetails2 tbody tr:nth-last-child(2)");
                var trLast = $("#tableMetaSettings tr:last")

                trLast.find("[name *= 'DocCode']").attr({
                    "name": ("DocCode" + counter)
                });
                trLast.find("[name *= 'DocName']").attr({
                    "name": ("DocName" + counter)
                });
                trLast.find("[name *= 'DocNo']").attr({
                    "name": ("DocNo" + counter)
                });
                trLast.find("[name *= 'IssuePlace']").attr({
                    "name": ("IssuePlace" + counter)
                });
                trLast.find("[name *= 'DocStatus']").attr({
                    "name": ("DocStatus" + counter)
                });
                trLast.find("[name *= 'StartDate']").attr({
                    "name": ("StartDate" + counter)
                });
                trLast.find("[name *= 'EndDate']").attr({
                    "name": ("EndDate" + counter)
                });
                trLast.find("[name *= 'Description']").attr({
                    "name": ("Description" + counter)
                });
                trLast.find(":first").text(counter);

            }
            else
            {
                tr.find("[name*='DocName']").val(doName);
            }
            counter++;

        });

        var tablePODetails2 = $("#tablePODetails2 tbody tr");
        var index3 = 1;
        tablePODetails2.each(function (index3, item) {
            debugger;
            //Date.prototype.getToday1 = Ezsetdtpkdate($("[name*='hdnStartDate" + (index + 1) + "']").val());
            //Date.prototype.getToday2 = Ezsetdtpkdate($("[name*='hdnEndDate" + (index + 1) + "']").val());

            $("[name*='DocCode" + (index3 + 1) + "']").val($("[name*='hdnDocCode" + (index3 + 1) + "']").val());
            $("[name*='DocName" + (index3 + 1) + "']").val($("[name*='hdnDocName" + (index3 + 1) + "']").val());
           // $("[name*='DocNo" + (index3 + 1) + "']").val($("[name*='hdnDocNo" + (index3 + 1) + "']").val());
            // $("[name*='DocStatus" + (index3 + 1) + "']").val($("[name*='hdnDocStatus" + (index3 + 1) + "']").val());
            if ($("[name*='hdnStartDate" + (index3 + 1) + "']").val() == undefined)            
                EzdtePk("[name*='StartDate" + (index3 + 1) + "']");
            else
                $("[name*='StartDate" + (index3 + 1) + "']").val(EzdteTblPkEdit($("[name*='hdnStartDate" + (index3 + 1) + "']").val()));
            if ($("[name*='hdnEndDate" + (index3 + 1) + "']").val() == undefined)
                EzdtePk("[name*='EndDate" + (index3 + 1) + "']");
            else
            $("[name*='EndDate" + (index3 + 1) + "']").val(EzdteTblPkEdit($("[name*='hdnEndDate" + (index3 + 1) + "']").val()));
            $("[name*='Description" + (index3 + 1) + "']").val($("[name*='hdnDescription" + (index3 + 1) + "']").val());
           // $("[name*='IssuePlace" + (index3 + 1) + "']").val($("[name*='hdnIssuePlace" + (index3 + 1) + "']").val());
            // $("[name*='DocumentPath" + (index3 + 1) + "']").val($("[name*='SourceFile" + (index3 + 1) + "']").prop('defaultValue'));
            $("[name*='ALERT_BEFORE" + (index3 + 1) + "']").val($("[name*='hdnAlertBefore" + (index3 + 1) + "']").val());

            index3 = index3 + 1;
        });

       
      
        
        //EzdtePk('#StartDate' + index3 + ',#StartDate' + index3 + '');
        //EzdtePk('#EndDate' + index3 + ',#EndDate' + index3 + '');
        var tablePODetails1 = $("#tablePODetails1 tbody tr");
        var index2 = 1;
        tablePODetails1.each(function (index2, item) {
           
            $("[name*='Institution" + (index2 + 1) + "']").val($("[name*='hdnInstitution" + (index2 + 1) + "']").val());
            $("[name*='Location" + (index2 + 1) + "']").val($("[name*='hdnLocation" + (index2 + 1) + "']").val());
            $("[name*='Degree" + (index2 + 1) + "']").val($("[name*='hdnDegree" + (index2 + 1) + "']").val());
            $("[name*='DegreeName" + (index2 + 1) + "']").val($("[name*='hdnDegreeName" + (index2 + 1) + "']").val());
            $("[name*='ObtainedYear" + (index2 + 1) + "']").val($("[name*='hdnObtainedYear" + (index2 + 1) + "']").val());
            $("[name*='Specification" + (index2 + 1) + "']").val($("[name*='hdnSpecification" + (index2 + 1) + "']").val());
            index2 = index2 + 1;
        });
        EzdtePkyyyy("#ObtainedYear" + (index2) + "");
        //EzdtePkyyyy('#ObtainedYear' + index2 + ',#ObtainedYear' + index2 + '');
        var tablePODetails = $("#tablePODetails tbody tr");
        var index1 = 1;
        tablePODetails.each(function (index1, item) {
                     
            //Date.prototype.getToday = Ezsetdtpkdate($("[name*='hdnNomineeDOB" + (index + 1) + "']").val());
            $("[name*='NomineeName" + (index1 + 1) + "']").val($("[name*='hdnNomineeName" + (index1 + 1) + "']").val());
            $("[name*='NomineeAddress" + (index1 + 1) + "']").val($("[name*='hdnNomineeAddress" + (index1 + 1) + "']").val());
            $("[name*='NomineeRelation" + (index1 + 1) + "']").val($("[name*='hdnNomineeRelation" + (index1 + 1) + "']").val());
            $("[name*='NomineeDOB" + (index1 + 1) + "']").val(EzdteTblPkEdit($("[name*='hdnNomineeDOB" + (index1 + 1) + "']").val()));

            index1 = index1 + 1;
        });
        //EzdtePk('#NomineeDOB' + index1 + ',#NomineeDOB' + index1 + '');

        //EzdtePk("#StartDate" + (index3) + ",#EndDate" + (index3) + ",#NomineeDOB" + (index1) + "");
        $('body').on('focusin', '.datepicker', function () {
           
            // var myDate = new Date(2012, 2, 11);

            // $('#startdate').datetimepicker("setDate", myDate);
            $('.datepicker').datetimepicker({
                // defaultDate: new Date(),
                format: 'DD/MM/YYYY',
                showClose: true,
                showClear: true,
              
            });

        });
        $('body').on('focusin', '.dt3', function () {
           
            // var myDate = new Date(2012, 2, 11);

            // $('#startdate').datetimepicker("setDate", myDate);
            $('.dt3').datetimepicker({
                // defaultDate: new Date(),
                format: 'YYYY',
                showClose: true,
                showClear: true,
                
            });

        });

        //EztableDateCondion("#tablePODetails2", "[name*='StartDate']", "[name*='EndDate']", "E");
        //EztableDateCondion("#tablePODetails2", "[name*='EndDate']", "[name*='StartDate']", "N");
        $("#tablePODetails2").on('dp.change', "[name*='StartDate']", function (e) {
           
            var fstyp = "";
            if (e.oldDate !== null) {
                var tr = $(this).closest("tr");
                if ((t == false) && (new Date(Ezsetdtpkdate(tr.find("[name*='StartDate']").val())) >= new Date(Ezsetdtpkdate(tr.find("[name*='EndDate']").val())))) {//compare end <=, not >=
                    tr.find("[name*='StartDate']").val(tr.find("[name*='EndDate']").val());
                    t = true;
                    EzAlerterrDt();
                }
                else {
                    t = false;
                }
            }
        });
        $("#tablePODetails2").on('dp.change', "[name*='EndDate']", function (e) {
           
            var fstyp = "";
            if (e.oldDate !== null) {
                var tr = $(this).closest("tr");
                if ((t == false) && (new Date(Ezsetdtpkdate(tr.find("[name*='EndDate']").val())) <= new Date(Ezsetdtpkdate(tr.find("[name*='StartDate']").val())))) {//compare end <=, not >=
                    tr.find("[name*='EndDate']").val(tr.find("[name*='StartDate']").val());
                    t = true;
                    EzAlerterrDt();
                }
                else {
                    t = false;
                }
            }
        });

        $(".dt3").on("dp.show", function (e) {
            $(e.target).data("DateTimePicker").viewMode("years");
        });
       // alert($('#hdnDocumentPath').val());
      
        //$('.selectpicker').selectpicker({
        //    style: 'btn-info',
        //    size: 4,

        //});

        $('body').on('focus', ':input', function () {
            $(this).attr('autocomplete', 'off');
        });
    });
    $(document).ready(function () {
        $("a").attr('target', '_blank');       
    });
  
</script>


<div class="container-fluid containersize">
    <div id="POContainer">
        <div class="row">
            @Html.HiddenFor(m => m.LeaveStatus)
            @Html.HiddenFor(m => m.AbscondingYN)
            @Html.HiddenFor(m => m.SupervisorYN)
            @Html.HiddenFor(m => m.PhysicallyDisabledYN)
            @Html.HiddenFor(model => model.FirstSetDate)
            @Html.HiddenFor(model => model.LeaveSettlementDate)


            <div class="col-md-4 grpborder">
                <h5 class="emph5">Personal Details</h5>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Emp Code <i class="star">*</i></label>
                    <div class="col-md-8 input-field">
                        @Html.TextBoxFor(m => m.EmpCode, new { @class = "form-control", @disabled = "disabled" })
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Name<i class="star">*</i></label>
                    <div class="col-md-8 input-field">
                        @Html.TextBoxFor(m => m.Empname, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Mol ID</label>
                    <div class="col-md-8 input-field">
                        <input type="text" class="form-control" />
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Date Of Birth </label>
                    <div class="col-md-8 input-field">
                        <input id="DOB1" class="form-control datepicker" name="DOB1" />
                        @Html.HiddenFor(m => m.DOB)
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Place Of Birth</label>
                    <div class="col-md-8 input-field">
                        <input id="" class="form-control" name="POB" />
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Gender <i class="star">*</i></label>
                    <div class="col-md-8 input-field">
                        <label class="radio-inline" checked="checked">
                            @Html.RadioButtonFor(m => m.Sex, "M", new { @checked = "checked" }) Male
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(m => m.Sex, "F") Female
                        </label>
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Blood Group</label>
                    <div class="col-md-8 input-field">
                        @Html.DropDownListFor(m => m.BloodGroup, Model.BloodGroupList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Marital Status</label>
                    <div class="col-md-8 input-field radiobtn1">
                        <label class="radio-inline">
                            @Html.RadioButtonFor(m => m.MaritalStatus, "S", new { @checked = "checked" }) Married
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(m => m.MaritalStatus, "D")  Unmarried
                        </label>
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-6">Physically Disabled</label>
                    <div class="col-md-1 icheck-inline" style="margin-left: -32px;">
                        @*@Html.CheckBox("PhysicallyDisabledYN", new { @style = "margin-top:0px;" })*@
                        @Html.CheckBox("PhysicallyDisabledYN", false)
                    </div>
                    <div class="col-md-6 input-field">
                        @Html.TextBoxFor(m => m.PhysicallyDisabled, new { @style = "width: 60%;display:none", @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Nationality <i style="color:red;">*</i></label>
                    <div class="col-md-8 input-field">
                        @Html.DropDownListFor(m => m.Nationality, Model.NationalityList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Language Known</label>
                    <div class="col-md-8 input-field">
                        <input id="" class="form-control" name="LK" />
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Religion <i style="color:red;">*</i></label>
                    <div class="col-md-8 input-field">
                        <input id="" class="form-control" name="R" />
                    </div>
                </div>

            </div>


            <div class="col-md-5 grpborder">
                <h5 class="emph5">Work Details</h5>
                <div class="col-md-6 form-group">
                    <label class="control-label emptxt col-md-6">Joining Date <i class="star">*</i></label>
                    <div class="col-md-6 input-field">
                        <input id="JoiningDate1" class="form-control datepicker" name="JoiningDate1" style="width:88px;margin-left: 50px;" />
                        @Html.HiddenFor(m => m.JoiningDate)
                    </div>
                </div>
                @*<div class="col-md-4 form-group">
                    <label class="control-label emptxt col-md-6" style="margin-left: 2px;">Supervisor</label>
                    <div class="col-md-3 input-field" style="margin-left: 8px;">
                        <label>
                            @Html.CheckBox("SupervisorYN", false)
                        </label>
                    </div>
                </div>*@

                <div class="col-md-6 form-group">
                    <label class="control-label emptxt col-md-6" style="margin-left: 10px;">On Leave1</label>
                    <div class="col-md-4 input-field" >
                        <div class="icheck-inline">
                            <label>
                                @Html.CheckBox("LeaveStatus", false)
                            </label>
                        </div>
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-4">Status</label>
                    <div class="col-md-8 input-field">
                        @Html.DropDownListFor(m => m.WorkingStatus, Model.WorkingStatusList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-4">Location</label>
                    <div class="col-md-8 input-field">
                        @Html.DropDownListFor(m => m.LocCode, Model.LocationList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                    </div>
                </div>
                @*<div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-4">Division</label>
                    <div class="col-md-8 input-field">
                        @Html.DropDownListFor(m => m.DivisionCode, Model.DivisionList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-4">Profession </label>
                    <div class="col-md-8 input-field">
                        @Html.DropDownListFor(m => m.ProfCode, Model.ProfList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-4">Department</label>
                    <div class="col-md-8 input-field">
                        @Html.DropDownListFor(m => m.DepartmentCode, Model.DepartmentList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-4">Current Project</label>
                    <div class="col-md-8 input-field">
                        <input type="text" class="form-control" />
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-4">Reporting To</label>
                    <div class="col-md-8 input-field">
                        @Html.DropDownListFor(m => m.ReportingEmp, Model.ReportingEmpList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                    </div>
                </div>*@
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-4">Contract Term</label>
                    <div class="col-md-8 input-field">
                        <label class="radio-inline">
                            <input type="radio" name="OptionsRadios" id="OptionsRadios1" value="Option" checked />
                            Limited
                        </label>
                        <label class="radio-inline">
                            <input type="radio" name="OptionsRadios" id="OptionsRadios1" value="Option" checked />
                            Unlimited
                        </label>
                    </div>
                </div>


                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-4">Contract</label>
                    <div class="col-md-8 input-field">
                        <label class="radio-inline" checked="checked">
                            <input type="radio" name="OptionsRadios" id="OptionsRadios1" value="Option" checked />
                            Single
                        </label>
                        <label class="radio-inline">
                            <input type="radio" name="OptionsRadios" id="OptionsRadios1" value="Option" checked />
                            Family
                        </label>

                        <label class="radio-inline" checked="checked">
                            <input type="radio" name="OptionsRadios" id="OptionsRadios1" value="Option" checked />
                            In
                        </label>
                        <label class="radio-inline">
                            <input type="radio" name="OptionsRadios" id="OptionsRadios1" value="Option" checked />
                            Out
                        </label>
                        &nbsp;
                        <label>
                            <input type="text" class="form-control" style="width:45px" />
                        </label>
                    </div>
                </div>
                @*<div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-4">Visa Location</label>
                    <div class="col-md-8 input-field">
                        @Html.DropDownListFor(m => m.VisaLocation, Model.VisaLocationList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-4">Absconding</label>
                    <div class="col-md-8 input-field">
                        <label>
                            @Html.CheckBox("AbscondingYN", false)
                        </label>
                    </div>
                </div>*@
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-4">Classification</label>
                    <div class="col-md-8 input-field">
                        <label class="radio-inline" checked="checked">
                            <input type="radio" name="OptionsRadios" id="OptionsRadios1" value="Option" checked />
                            Office Staff
                        </label>
                        <label class="radio-inline">
                            <input type="radio" name="OptionsRadios" id="OptionsRadios1" value="Option" checked />
                            Side Staff
                        </label>
                    </div>
                </div>

            </div>

            <div class="col-md-2">
                <div class="col-md-12  form-group">
                    <div class="input-field">
                        <img id="user_img" class="empimg" />
                        <div>
                            <div class="clearfix" style="height: 10px;"></div>

                            <div class="upload-btn-wrapper">
                                <button class="btnup">Select Image</button>
                                <button class="btnup1">Remove Image</button>

                                @Html.HiddenFor(model => model.photpath)
                                @Html.TextBoxFor(m => m.sourcephoto, new { type = "file", multiple = "multiple" })
                            </div>

                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class="row">
            <div class="col-md-4 grpborder contcdetailedit" >
                <h5 class="emph5">Contact Details</h5>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Local Address <i class="star">*</i></label>
                    <div class="col-md-8 input-field">
                        @Html.TextAreaFor(m => m.AddressLocal, new { @class = "form-control", @placeholder = "Local Address" })
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Home Address</label>
                    <div class="col-md-8 input-field">
                        @Html.TextAreaFor(m => m.Address, new { @class = "form-control", @placeholder = "Permanent Address" })
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Emergency Contact</label>
                    <div class="col-md-8 input-field">
                        <input type="text" class="form-control" />
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Contact Number</label>
                    <div class="col-md-8 input-field">
                        <input type="text" class="form-control" />
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Email <i class="star">*</i></label>
                    <div class="col-md-8 input-field">
                        @Html.TextBoxFor(m => m.EMail, new { @class = "form-control" })
                    </div>
                </div>

            </div>
            <div class="col-md-5 grpborder workruledit">
                <h5 class="emph5">Working Rules</h5>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Weekly Off 1</label>
                    <div class="col-md-8 input-field">
                        @Html.DropDownListFor(m => m.Week_off1, Model.Week_offList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Weekly Off 2</label>
                    <div class="col-md-8 input-field">
                        @Html.DropDownListFor(m => m.Week_off2, Model.Week_offList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Half Day</label>
                    <div class="col-md-8 input-field">
                        <select class="form-control" name="">
                            <option values="">-----Select-----</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="col-md-5 grpborder campinfoedit">
                <h5 class="emph5">Camp Info</h5>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Camp Name</label>
                    <div class="col-md-8 input-field">
                        <select class="form-control" name="">
                            <option values="">-----Select-----</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Camp Location</label>
                    <div class="col-md-8 input-field">
                        <input type="text" class="form-control" />
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Room No.</label>
                    <div class="col-md-8 input-field">
                        <input type="text" class="form-control" />
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4 grpborder finandetail" >
                <h5 class="emph5">Financial Details</h5>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Payment</label>
                    <div class="col-md-8 input-field">
                        <label class="radio-inline" checked="checked">
                            <input type="radio" name="OptionsRadios" id="OptionsRadios1" value="Option" checked />
                            Transfer
                        </label>
                        <label class="radio-inline">
                            <input type="radio" name="OptionsRadios" id="OptionsRadios1" value="Option" checked />
                            Cheque
                        </label>
                        <label class="radio-inline">
                            <input type="radio" name="OptionsRadios" id="OptionsRadios1" value="Option" checked />
                            Cash
                        </label>
                    </div>
                </div>
                @*<div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Bank</label>
                    <div class="col-md-8 input-field">
                        @Html.DropDownListFor(m => m.BankCode, Model.BankList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Bank Acct</label>
                    <div class="col-md-8 input-field">
                        @Html.TextBoxFor(m => m.BankAccNo, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Bank Branch</label>
                    <div class="col-md-8 input-field">
                        @Html.DropDownListFor(m => m.BankBranchCode, Model.BankBranchCodeList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                    </div>
                </div>*@
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">G/L Account (DR)</label>
                    <div class="col-md-8 input-field">
                        <select class="form-control" name="">
                            <option>-----Select-----</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">G/L Account (CR)</label>
                    <div class="col-md-8 input-field">
                        <select class="form-control" name="">
                            <option>-----Select-----</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Loan Account (CR)</label>
                    <div class="col-md-8 input-field">
                        <select class="form-control" name="">
                            <option>-----Select-----</option>
                        </select>
                    </div>
                </div>


            </div>
            <div class="col-md-5 grpborder tckedit">
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Ticket Rule</label>
                    <div class="col-md-8 input-field">
                        <select class="form-control" name="">
                            <option>-----Select-----</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">OB As On</label>
                    <div class="col-md-8 input-field">
                        <select class="form-control" name="">
                            <option>-----Select-----</option>
                        </select>
                    </div>
                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">AL Opening</label>
                    <div class="col-md-8 input-field">
                        <input type="text" class="form-control" />
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5"> AL Balance</label>
                    <div class="col-md-8 input-field">
                        <input type="text" class="form-control" />
                    </div>
                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Ticket OB</label>
                    <div class="col-md-8 input-field">
                        <input type="text" class="form-control" />
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label class="control-label emptxt col-md-5">Ticket Balance</label>
                    <div class="col-md-8 input-field">
                        <input type="text" class="form-control" />
                    </div>
                </div>

            </div>
        </div>
        <br />

        <div class="">
            <ul class="nav nav-tabs">
                <li class="active b1"><a data-toggle="tab" href="#home">General</a></li>
                <li class="b1"><a data-toggle="tab" href="#menu1">Additional Information</a></li>
                <li class="b1"><a data-toggle="tab" href="#menu2">Documents</a></li>
                <li class="b1"><a data-toggle="tab" href="#menu3">Nominee Information</a></li>
                <li class="b1"><a data-toggle="tab" href="#menu4">Education</a></li>
            </ul>
            <div class="tab-content">
                <div id="home" class="tab-pane fade in active">
                    <br /><br />
                    <div class="form-horizontal">
                        <div class="form-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Group<i style="color:red;">*</i></label>
                                        <div class="col-md-8 input-field">
                                            @Html.DropDownListFor(m => m.DivisionCode, Model.DivisionList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                                        </div>
                                    </div>
                                </div>
                                <!--/span-->
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Bank</label>
                                        <div class="col-md-8 input-field">
                                            @Html.TextBoxFor(m => m.BankAccNo, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Branch Code</label>
                                        <div class="col-md-8 input-field">
                                            @Html.DropDownListFor(m => m.BranchCode, Model.BranchCodeList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Bank Branch</label>
                                        <div class="col-md-8 input-field">
                                            @Html.DropDownListFor(m => m.BankBranchCode, Model.BankBranchCodeList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!--/row-->
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Department</label>
                                        <div class="col-md-8 input-field">
                                            @Html.DropDownListFor(m => m.DepartmentCode, Model.DepartmentList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                                        </div>
                                    </div>
                                </div>
                                <!--/span-->
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Bank Acct</label>
                                        <div class="col-md-8 input-field">
                                            @Html.TextBoxFor(m => m.BankAccNo, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                                <!--/span-->
                            </div>
                            <!--/row-->
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Project</label>
                                        <div class="col-md-8 input-field">
                                            @Html.DropDownListFor(m => m.ProjectCode, Model.ProjectList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Marital Status</label>
                                        <div class="col-md-8 input-field radiobtn1">

                                            <label class="radio-inline">
                                                @Html.RadioButtonFor(m => m.MaritalStatus, "S", new { @checked = "checked" }) Married
                                            </label>
                                            <label class="radio-inline">
                                                @Html.RadioButtonFor(m => m.MaritalStatus, "D")  Unmarried
                                            </label>

                                        </div>
                                    </div>
                                </div>
                                <!--/span-->
                                <!--/span-->
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Reporting To<i style="color:red;">*</i></label>
                                        <div class="col-md-8 input-field">
                                            @Html.DropDownListFor(m => m.ReportingEmp, Model.ReportingEmpList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                                        </div>
                                    </div>
                                </div>
                                <!--/span-->
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Profession<i style="color:red;">*</i></label>
                                        <div class="col-md-8 input-field">
                                            @Html.DropDownListFor(m => m.ProfCode, Model.ProfList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">

                                @*<div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Blood Group</label>
                                        <div class="col-md-8 input-field">
                                            @Html.DropDownListFor(m => m.BloodGroup, Model.BloodGroupList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                                        </div>
                                    </div>
                                </div>*@
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-4">Physically Disabled</label>
                                        <div class="col-md-1 icheck-inline checkbox1" style="margin-left: -32px;">
                                            @Html.CheckBox("PhysicallyDisabledYN", false)
                                        </div>
                                        <div class="col-md-6 input-field">
                                            @Html.TextBoxFor(m => m.PhysicallyDisabled, new { @style = "width: 60%;display:none", @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">

                                @*<div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Weekly Off 1</label>
                                        <div class="col-md-8 input-field">
                                            @Html.DropDownListFor(m => m.Week_off1, Model.Week_offList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                                        </div>
                                    </div>
                                </div>*@
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Pay Rule</label>
                                        <div class="col-md-8 input-field">
                                            <label class="radio-inline">
                                                @Html.RadioButtonFor(m => m.wagesby, "M", new { @checked = "checked" }) Monthly
                                            </label>
                                            <label class="radio-inline">
                                                @Html.RadioButtonFor(m => m.wagesby, "D") Daily
                                            </label>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Weekly Off 2</label>
                                        <div class="col-md-8 input-field">
                                            @Html.DropDownListFor(m => m.Week_off2, Model.Week_offList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                                        </div>
                                    </div>
                                </div>

                            </div>

                        </div>
                    </div>
                </div>

                <div id="menu1" class="tab-pane fade">
                    <br /><br />
                    <div class="form-horizontal">
                        <div class="form-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Contact Date</label>
                                        <div class="col-md-8 input-field">
                                            <input id="ContactDate1" class="form-control datepicker" name="ContactDate1" />
                                            @Html.HiddenFor(m => m.ContactDate)
                                        </div>
                                    </div>
                                </div>
                                <!--/span-->
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Ticket Type</label>
                                        <div class="col-md-8 input-field">


                                            <label class="radio-inline">
                                                @Html.RadioButtonFor(m => m.TicketType, "E", new { @checked = "checked" }) Economy
                                            </label>
                                            <label class="radio-inline">
                                                @Html.RadioButtonFor(m => m.TicketType, "B") Business
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!--/row-->
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Absconding</label>
                                        <div class="col-md-8 input-field">
                                            <label>
                                                @Html.CheckBox("AbscondingYN", false)
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <!--/span-->
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Supervisor</label>
                                        <div class="col-md-8 input-field">
                                            <label>
                                                @Html.CheckBox("SupervisorYN", false)
                                            </label>
                                        </div>
                                    </div>
                                </div>

                                <!--/span-->
                            </div>

                            <!--/row-->
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Absconding Date</label>
                                        <div class="col-md-8 input-field checkbox1">
                                            <input id="AbscondingDate1" class="form-control datepicker" name="AbscondingDate1" />
                                            @Html.HiddenFor(m => m.AbscondingDate)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">No. of Tickets</label>
                                        <div class="col-md-8 input-field">

                                            <label class="radio-inline">
                                                @Html.RadioButtonFor(m => m.TicketNo, "O", new { @checked = "checked" })  1 YR - Tkt
                                            </label>
                                            <label class="radio-inline">
                                                @Html.RadioButtonFor(m => m.TicketNo, "T")  2 YR - TKT
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                @*<div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Nationality<i style="color:red;">*</i></label>
                                        <div class="col-md-8 input-field">
                                            @Html.DropDownListFor(m => m.Nationality, Model.NationalityList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                                        </div>
                                    </div>
                                </div>*@
                                <!--/span-->
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Contract</label>
                                        <div class="col-md-8 input-field">
                                            @Html.RadioButtonFor(m => m.Contract, "S", new { @checked = "checked" }) Single
                                            @Html.RadioButtonFor(m => m.Contract, "F") Family
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Language Known</label>
                                        <div class="col-md-8 input-field">
                                            @Html.TextBoxFor(m => m.LanguageKnown, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Employee type</label>
                                        <div class="col-md-8 input-field">
                                            @Html.RadioButtonFor(m => m.EmpType, "SS", new { @checked = "checked" }) staff

                                            @Html.RadioButtonFor(m => m.EmpType, "OS") Labour
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">Visa Location<i style="color:red;">*</i></label>
                                        <div class="col-md-8 input-field">
                                            @Html.DropDownListFor(m => m.VisaLocation, Model.VisaLocationList, new { @class = "selectpicker form-control", @data_live_search = "true" })
                                        </div>
                                    </div>
                                </div>
                                <!--/span-->

                            </div>

                        </div>
                    </div>

                </div>
                <div id="menu2" class="tab-pane fade">
                    <br /><br />
                    @*<div style="overflow-x:auto;">*@
                    <table class="table table-bordered table-sm" id="tablePODetails2">
                        <thead>
                            <tr>
                                <th>Code</th>
                                <th>Name</th>
                                @*<th>Number</th>
                                <th>Issue Place</th>
                                <th>Status</th>*@
                                @*<th>Issue Date</th>
                                <th>Expiry Date</th>*@
                                <th>Start date</th>
                                <th>End date</th>
                                <th>Description</th>
                                <th>AlertBefore</th>
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var item in Model.EmployeeDetailnews)
                            {
                                <tr>
                                    <td>
                                        <div class="grid-group">
                                            @Html.DropDownList(string.Concat("DocCode", counter), Model.DocList, new { @class = "grid-control" })
                                            @Html.Hidden(string.Concat("hdnDocCode", counter), item.DocCode)
                                        </div>
                                    </td>
                                    <td>
                                        <div class="grid-group">
                                            @Html.TextBox(string.Concat("DocName", counter), null, new { @class = "grid-control", @disabled = "disabled" })
                                            @Html.Hidden(string.Concat("hdnDocName", counter), item.DocName)
                                        </div>
                                    </td>
                                    @*<td>
                                        <div class="grid-group">
                                            @Html.TextBox(string.Concat("DocNo", counter), null, new { @class = "grid-control" })
                                            @Html.Hidden(string.Concat("hdnDocNo", counter), item.DocNo)
                                        </div>
                                    </td>
                                    <td>
                                        <div class="grid-group">
                                            @Html.TextBox(string.Concat("IssuePlace", counter), null, new { @class = "grid-control" })
                                            @Html.Hidden(string.Concat("hdnIssuePlace", counter), item.IssuePlace)
                                        </div>
                                    </td>
                                    <td>
                                        <div class="grid-group">
                                            @Html.TextBox(string.Concat("DocStatus", counter), null, new { @class = "grid-control" })
                                            @Html.Hidden(string.Concat("hdnDocStatus", counter), item.DocStatus)
                                        </div>
                                    </td>*@
                                    <td>
                                        <div class="grid-group">
                                            @Html.TextBox(string.Concat("StartDate", counter), null, new { @class = "grid-control datepicker" })
                                            @Html.Hidden(string.Concat("hdnStartDate", counter), item.StartDate)
                                        </div>
                                    </td>
                                    <td>
                                        <div class="grid-group">
                                            @Html.TextBox(string.Concat("EndDate", counter), null, new { @class = "grid-control datepicker" })
                                            @Html.Hidden(string.Concat("hdnEndDate", counter), item.EndDate)
                                        </div>
                                    </td>
                                    <td>
                                        <div class="grid-group">
                                            @Html.TextBox(string.Concat("Description", counter), null, new { @class = "grid-control" })
                                            @Html.Hidden(string.Concat("hdnDescription", counter), item.Description)
                                        </div>
                                    </td>
                                    @*<td>
                                        <div class="grid-group">                   
                                            @Html.TextBox(string.Concat("SourceFile", counter), item.DocumentPath, new { @class = "grid-control", type = "File", multiple = "multiple", @Title = item.DocumentPath })
                                            @Html.Hidden(string.Concat("DocumentPath", counter), item.DocumentPath)
                                            @Html.ActionLink(string.Concat("Download File"), "Download", new { parentPartId = item.DocumentPath })                                          
                                        </div>
                                    </td>*@
                                    <td>
                                        <div class="grid-group">
                                            @Html.DropDownList(string.Concat("ALERT_BEFORE", counter), new List<SelectListItem> { new SelectListItem { Text = "YES", Value = "1" }, new SelectListItem { Text = "NO", Value = "0" }, }, new { @class = "grid-control" })
                                            @Html.Hidden(string.Concat("hdnAlertBefore", counter), item.AlertBefore)
                                        </div>
                                    </td>
                                    <td>
                                        <button type="button" class="btn btn-danger" name="@string.Concat("btnDelete",counter)"><span class="glyphicon glyphicon-remove"></span></button>
                                    </td>
                                </tr>
                                counter++;
                            }
                            <tr>
                                <td>
                                    <div class="grid-group">
                                        @Html.DropDownList(string.Concat("DocCode", counter), Model.DocList, new { @class = "grid-control" })
                                    </div>
                                </td>
                                <td>
                                    <div class="grid-group">
                                        @Html.TextBox(string.Concat("DocName", counter), null, new { @class = "grid-control", @disabled = "disabled" })
                                    </div>
                                </td>
                                @*<td>
                                    <div class="grid-group">
                                        @Html.TextBox(string.Concat("DocNo", counter), null, new { @class = "grid-control" })
                                    </div>
                                </td>*@
                                @*<td>
                                    <div class="grid-group">
                                        @Html.TextBox(string.Concat("IssuePlace", counter), null, new { @class = "grid-control" })
                                    </div>
                                </td>*@
                                @*<td>
                                    <div class="grid-group">
                                        @Html.TextBox(string.Concat("DocStatus", counter), null, new { @class = "grid-control" })
                                    </div>
                                </td>*@

                                <td>
                                    <div class="grid-group">
                                        @Html.TextBox(string.Concat("StartDate", counter), null, new { @class = "grid-control datepicker" })


                                    </div>
                                </td>
                                <td>
                                    <div class="grid-group">
                                        @Html.TextBox(string.Concat("EndDate", counter), null, new { @class = "grid-control datepicker" })
                                    </div>
                                </td>
                                <td>
                                    <div class="grid-group">
                                        @Html.TextBox(string.Concat("Description", counter), null, new { @class = "grid-control" })
                                    </div>
                                </td>
                                @*<td>
                                    <div class="grid-group">
                                        @Html.Hidden(string.Concat("DocumentPath", counter), null, new { @class = "grid-control" })
                                        @Html.TextBox(string.Concat("SourceFile", counter), null, new { @class = "grid-control", type = "File", multiple = "multiple" })

                                    </div>
                                </td>*@
                                <td>
                                    @Html.DropDownList(string.Concat("ALERT_BEFORE", counter), new List<SelectListItem> { new SelectListItem { Text = "YES", Value = "1" }, new SelectListItem { Text = "NO", Value = "0" }, }, new { @class = "grid-control" })
                                </td>
                                <td></td>
                            </tr>
                        </tbody>

                    </table>
                    @Html.Hidden("counter", (++counter))
                    @*</div>*@
                </div>
                <div id="menu3" class="tab-pane fade">
                    <br /><br />
                    <div>
                        @*style="overflow-x:auto;"*@
                        <table class="table table-bordered table-sm" id="tablePODetails">
                            <thead>
                                <tr>
                                    @*<th>Sr No.</th>*@
                                    <th>Name Of the Nominee</th>
                                    <th>Address</th>
                                    <th>Relation With Nominee's</th>
                                    <th>Date Of Birth</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.EmployeeNomineenews)
                                {
                                    <tr>
                                        @*<td>
                        <div class="grid-group">
                            @Html.Label(counter1.ToString())
                        </div>
                    </td>*@
                                        <td>
                                            <div class="grid-group">
                                                @Html.TextBox(string.Concat("NomineeName", counter1), null, new { @class = "grid-control" })
                                                @Html.Hidden(string.Concat("hdnNomineeName", counter1), item.NomineeName)
                                            </div>
                                        </td>
                                        <td>
                                            <div class="grid-group">
                                                @Html.TextBox(string.Concat("NomineeAddress", counter1), null, new { @class = "grid-control" })
                                                @Html.Hidden(string.Concat("hdnNomineeAddress", counter1), item.NomineeAddress)
                                            </div>
                                        </td>
                                        <td>
                                            <div class="grid-group">
                                                @Html.TextBox(string.Concat("NomineeRelation", counter1), null, new { @class = "grid-control" })
                                                @Html.Hidden(string.Concat("hdnNomineeRelation", counter1), item.NomineeRelation)
                                            </div>
                                        </td>
                                        <td>
                                            <div class="grid-group">
                                                @Html.TextBox(string.Concat("NomineeDOB", counter1), null, new { @class = "grid-control datepicker" })
                                                @Html.Hidden(string.Concat("hdnNomineeDOB", counter1), item.NomineeDOB)
                                            </div>
                                        </td>
                                        <td>
                                            <button type="button" class="btn btn-danger" name="@string.Concat("btnDelete",counter)"><span class="glyphicon glyphicon-remove"></span></button>
                                        </td>
                                    </tr>
                                    counter1++;
                                }
                                <tr>
                                    @*<td>
                    <div class="grid-group">
                        @Html.Label(counter1.ToString())
                    </div>
                </td>*@
                                    <td>
                                        <div class="grid-group">
                                            @Html.TextBox(string.Concat("NomineeName", counter1), null, new { @class = "grid-control" })
                                        </div>
                                    </td>
                                    <td>
                                        <div class="grid-group">
                                            @Html.TextBox(string.Concat("NomineeAddress", counter1), null, new { @class = "grid-control" })
                                        </div>
                                    </td>
                                    <td>
                                        <div class="grid-group">
                                            @Html.TextBox(string.Concat("NomineeRelation", counter1), null, new { @class = "grid-control" })
                                        </div>
                                    </td>
                                    <td>
                                        <div class="grid-group">
                                            @Html.TextBox(string.Concat("NomineeDOB", counter1), null, new { @class = "grid-control datepicker" })

                                        </div>
                                    </td>
                                </tr>
                            </tbody>

                        </table>
                        @Html.Hidden("counter1", (++counter1))
                    </div>
                </div>
                <div id="menu4" class="tab-pane fade">
                    <br /><br />
                    @**@
                    @*<div style="overflow-x:auto;">*@
                    <table class="table table-bordered table-sm" id="tablePODetails1">
                        <thead>
                            <tr>
                                @*<th style="width:10%">Sr. No.</th>*@
                                <th>Institution Attended</th>
                                <th>Location</th>
                                <th>Education</th>
                                <th>Degree Name</th>
                                <th>Year Obtained</th>
                                <th>Specialization</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                @*<td>
                                        <div class="grid-group">
                                            @Html.Label(counter2.ToString())
                                        </div>
                                    </td>*@
                                <td>
                                    <div class="grid-group">
                                        @Html.TextBox(string.Concat("Institution", counter2), null, new { @class = "grid-control" })
                                    </div>
                                </td>
                                <td>
                                    <div class="grid-group">
                                        @Html.TextBox(string.Concat("Location", counter2), null, new { @class = "grid-control" })
                                    </div>
                                </td>
                                <td>
                                    <div class="grid-group">
                                        @Html.DropDownList(string.Concat("Degree", counter2), Model.DegreeList, new { @class = "grid-control" })
                                    </div>
                                </td>

                                <td>
                                    <div class="grid-group">
                                        @Html.TextBox(string.Concat("DegreeName", counter2), null, new { @class = "grid-control" })
                                    </div>
                                </td>
                                <td>
                                    <div class="grid-group">
                                        @*<input id="ObtainedYear1" class="grid-control datepicker" name="ObtainedYear1" />*@

                                        @Html.TextBox(string.Concat("ObtainedYear", counter2), null, new { @class = "grid-control dt3" })
                                    </div>
                                </td>
                                <td>
                                    <div class="grid-group">
                                        @Html.TextBox(string.Concat("Specification", counter2), null, new { @class = "grid-control" })
                                    </div>
                                </td>

                            </tr>
                        </tbody>
                    </table>
                    @Html.Hidden("counter2", (++counter2))
                    @*</div>*@
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    table {
        position: relative !important;
    }

    .bootstrap-datetimepicker-widget li {
        display: block !important;
    }
</style>